[{"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\index.js":"1","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reportWebVitals.js":"2","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\App.js":"3","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\store.js":"4","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\utils\\setAuthToken.js":"5","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\authActions.js":"6","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\profileActions.js":"7","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\types.js":"8","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\CreateProfile.js":"9","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Profile.js":"10","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\EditProfile.js":"11","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\CurrentProfile.js":"12","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\HandleProfile.js":"13","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\UploadAvatar.js":"14","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Profiles.js":"15","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\auth\\Login.js":"16","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\auth\\Signup.js":"17","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\navbar\\Navbar.js":"18","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\footer\\Footer.js":"19","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\Post.js":"20","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\PrivateRoute.js":"21","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\NotFound.js":"22","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\CreatePost.js":"23","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\Posts.js":"24","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\gallery\\Gallery.js":"25","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\Spinner.js":"26","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Settings.js":"27","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfilePostItem.js":"28","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfilePicture.js":"29","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\postActions.js":"30","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfileCard.js":"31","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\gallery\\GalleryItem.js":"32","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionsBox.js":"33","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\PostFeed.js":"34","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\Comments.js":"35","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\AddComment.js":"36","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\Following.js":"37","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\Followers.js":"38","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\validation\\is-empty.js":"39","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\search\\Search.js":"40","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\index.js":"41","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionLists.js":"42","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\PostItem.js":"43","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\CommentItem.js":"44","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\FollowItem.js":"45","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\errorReducer.js":"46","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\authReducer.js":"47","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\profileReducer.js":"48","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\postReducer.js":"49","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionItem.js":"50","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\Comments.js":"51","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\AddComment.js":"52","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\CommentItem.js":"53"},{"size":500,"mtime":499162500000,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":4331,"mtime":1607861258663,"results":"57","hashOfConfig":"55"},{"size":495,"mtime":1607861372465,"results":"58","hashOfConfig":"55"},{"size":250,"mtime":1607861228481,"results":"59","hashOfConfig":"55"},{"size":2392,"mtime":1607861211461,"results":"60","hashOfConfig":"55"},{"size":5554,"mtime":1607861211472,"results":"61","hashOfConfig":"55"},{"size":863,"mtime":1607861211474,"results":"62","hashOfConfig":"55"},{"size":10175,"mtime":1607861215748,"results":"63","hashOfConfig":"55"},{"size":12515,"mtime":1607861215752,"results":"64","hashOfConfig":"55"},{"size":11778,"mtime":1607861215750,"results":"65","hashOfConfig":"55"},{"size":1854,"mtime":1607861215749,"results":"66","hashOfConfig":"55"},{"size":2491,"mtime":1607861215751,"results":"67","hashOfConfig":"55"},{"size":7030,"mtime":1607861215757,"results":"68","hashOfConfig":"55"},{"size":1346,"mtime":1607861215755,"results":"69","hashOfConfig":"55"},{"size":4393,"mtime":1607861215672,"results":"70","hashOfConfig":"55"},{"size":5867,"mtime":1607861215673,"results":"71","hashOfConfig":"55"},{"size":10610,"mtime":1607861215742,"results":"72","hashOfConfig":"55"},{"size":407,"mtime":1607861215722,"results":"73","hashOfConfig":"55"},{"size":8142,"mtime":1607861215714,"results":"74","hashOfConfig":"55"},{"size":618,"mtime":1607861215685,"results":"75","hashOfConfig":"55"},{"size":371,"mtime":1607861215683,"results":"76","hashOfConfig":"55"},{"size":4162,"mtime":1607861215710,"results":"77","hashOfConfig":"55"},{"size":1708,"mtime":1607861215736,"results":"78","hashOfConfig":"55"},{"size":1310,"mtime":1607861215725,"results":"79","hashOfConfig":"55"},{"size":290,"mtime":1607861215700,"results":"80","hashOfConfig":"55"},{"size":1443,"mtime":1607861215756,"results":"81","hashOfConfig":"55"},{"size":730,"mtime":1607861215755,"results":"82","hashOfConfig":"55"},{"size":5035,"mtime":1607861215754,"results":"83","hashOfConfig":"55"},{"size":9443,"mtime":1607861211470,"results":"84","hashOfConfig":"55"},{"size":4172,"mtime":1607861215753,"results":"85","hashOfConfig":"55"},{"size":358,"mtime":1607861215726,"results":"86","hashOfConfig":"55"},{"size":2623,"mtime":1607861215739,"results":"87","hashOfConfig":"55"},{"size":380,"mtime":1607861215735,"results":"88","hashOfConfig":"55"},{"size":736,"mtime":1607861215709,"results":"89","hashOfConfig":"55"},{"size":1716,"mtime":1607861215707,"results":"90","hashOfConfig":"55"},{"size":2170,"mtime":1607861215720,"results":"91","hashOfConfig":"55"},{"size":2230,"mtime":1607861215719,"results":"92","hashOfConfig":"55"},{"size":232,"mtime":1607861233568,"results":"93","hashOfConfig":"55"},{"size":3326,"mtime":1607861215762,"results":"94","hashOfConfig":"55"},{"size":351,"mtime":1607861223123,"results":"95","hashOfConfig":"55"},{"size":602,"mtime":1607861215738,"results":"96","hashOfConfig":"55"},{"size":7362,"mtime":1607861215736,"results":"97","hashOfConfig":"55"},{"size":2064,"mtime":1607861215708,"results":"98","hashOfConfig":"55"},{"size":3282,"mtime":1607861215718,"results":"99","hashOfConfig":"55"},{"size":311,"mtime":1607861223122,"results":"100","hashOfConfig":"55"},{"size":445,"mtime":1607861223121,"results":"101","hashOfConfig":"55"},{"size":1488,"mtime":1607861223124,"results":"102","hashOfConfig":"55"},{"size":1158,"mtime":1607861223124,"results":"103","hashOfConfig":"55"},{"size":1823,"mtime":1607861215737,"results":"104","hashOfConfig":"55"},{"size":2126,"mtime":1607861215734,"results":"105","hashOfConfig":"55"},{"size":1715,"mtime":1607861215732,"results":"106","hashOfConfig":"55"},{"size":996,"mtime":1607861215733,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"ldaz03",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\index.js",[],["243","244"],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reportWebVitals.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\App.js",["245"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport Profile from \"./components/profile/Profile\";\nimport EditProfile from \"./components/profile/EditProfile\";\nimport Footer from \"./components/footer/Footer\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Post from \"./components/displayPost/Post\";\nimport CreateProfile from \"./components/profile/CreateProfile\";\nimport CreatePost from \"./components/displayPost/CreatePost\";\nimport Profiles from \"./components/profile/Profiles\";\nimport Posts from \"./components/home/Posts\";\nimport CurrentProfile from \"./components/profile/CurrentProfile\";\nimport HandleProfile from \"./components/profile/HandleProfile\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logoutUser } from \"./actions/authActions\";\nimport { getCurrentProfile } from \"./actions/profileActions\";\nimport NotFound from \"./components/common/NotFound\";\nimport Gallery from './components/gallery/Gallery';\nimport UploadAvatar from './components/profile/UploadAvatar'\n\n//Check for token\nif (localStorage.jwtToken) {\n  //Set auth header with the token\n  setAuthToken(localStorage.jwtToken);\n  //Decode token\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Write user data to redux store\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  });\n\n  //Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n\n    window.location.href = \"/\";\n  } else {\n    store.dispatch(getCurrentProfile());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/' component={Login} />\n            <Switch>\n              <PrivateRoute\n                exact\n                path='/current-profile'\n                component={CurrentProfile}\n              />{\" \"}\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path='/profile' component={CurrentProfile} />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />{\" \"}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute exact path='/post/:id' component={Post} />\n              <PrivateRoute\n                exact\n                path='/profile/:handle'\n                component={HandleProfile}\n              />{\" \"}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />{\" \"}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute\n                exact\n                path='/create-post'\n                component={CreatePost}\n              />{\" \"}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute exact path='/explore' component={Profiles} />{\" \"}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute exact path='/home' component={Posts} />{\" \"}\n              {/* <PrivateRoute\n                exact\n                path='/home/:handle'\n                component={HandleProfile}\n              />{\" \"} */}\n            </Switch>\n            <Switch>\n              {\" \"}\n              <PrivateRoute exact path='/not-found' component={NotFound} />{\" \"}\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path='/gallery' component={Gallery} />{\" \"}\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path='/upload' component={UploadAvatar} />{\" \"}\n            </Switch>\n\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\store.js",["246"],"import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\n// const store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\utils\\setAuthToken.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\authActions.js",["247"],"import { SET_CURRENT_USER, GET_ERRORS, GET_PROFILE } from './types';\r\nimport axios from 'axios';\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {getCurrentProfile} from './profileActions'\r\nimport { clearCurrentProfile } from \"./profileActions\";\r\n\r\n//Register user\r\nexport const signupUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post('/api/users/signup', userData)\r\n    .then(res => history.push('/'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      }));\r\n};\r\n\r\n// Login user\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then((res) => {\r\n      // Save token to localStorage\r\n      const {token} = res.data;\r\n      localStorage.setItem('jwtToken', token);\r\n      // Set token to axios header\r\n      setAuthToken(token);\r\n      // Decode the token\r\n      const decoded = jwt_decode(token);\r\n      // Dispatch set current user\r\n       dispatch({\r\n       type: SET_CURRENT_USER,\r\n       payload: decoded\r\n      });\r\n      dispatch(getCurrentProfile());\r\n    }).catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n     \r\n    );\r\n};\r\n\r\n//Logout user\r\nexport const logoutUser = () => dispatch => {\r\n  //Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  //Remove token from auth header\r\n  setAuthToken(false);\r\n  //Reset the redux store to false and {}\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n  dispatch(clearCurrentProfile());\r\n};\r\n\r\n//Add picture\r\nexport const addPicture = (picture, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/editAvatar\", picture)\r\n    .then(res => {      \r\n      window.alert(\"Photo successfully changed\")\r\n      window.location.reload(false);\r\n     \r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      }))\r\n};\r\n\r\n//Delete Avatar\r\nexport const deletePicture = (history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/deleteAvatar\")\r\n    .then(res => {\r\n      // console.log(res.data);\r\n      //history.push(\"/profile\")})\r\n      window.location.reload(false)})\r\n    .catch(err => {\r\n      // console.log(err);\r\n      dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  })\r\n}","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\profileActions.js",["248","249"],"import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, GET_PROFILE, CLEAR_CURRENT_PROFILE, GET_PROFILES, PROFILE_LOADING, GET_FOLLOWING, GET_ALL_PROFILES, GET_CURRENT_PROFILE, CLEAR_PROFILE } from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport {logoutUser} from \"./authActions\";\r\n\r\n// Create Profile\r\nexport const createProfile = (profileData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/profile\", profileData)\r\n    .then((res) => history.push(\"/profile\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete profile and account\r\nexport const deleteAccount = (history) => (dispatch) => {\r\n  console.log(\"delete ptofile action\");\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    axios\r\n      .delete(\"/api/profile\")\r\n      .then((res) => {\r\n        // dispatch({\r\n        //   type: SET_CURRENT_USER,\r\n        //   payload: {},\r\n        // });\r\n        // history.push(\"/\");\r\n        dispatch(logoutUser());\r\n        // //Remove token from localStorage otherwise after deleting account, on refreshing page --the navbar shows -- as token will still be there in headers and locastorage \r\n        // localStorage.removeItem(\"jwtToken\");\r\n        // setAuthToken(false);\r\n      })\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: {},\r\n        })\r\n      );\r\n  }\r\n};\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(clearCurrentProfile());\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_CURRENT_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_CURRENT_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n// Get profile by handle\r\nexport const getProfileByHandle = (handle, history) => dispatch => {\r\ndispatch(clearProfile());\r\n  dispatch(setProfileLoading());\r\n  console.log('action getProfileby handle')\r\n  axios\r\n    .get(`/api/profile/handle/${handle}`)\r\n    .then(res =>{\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n     } )\r\n    .catch(err =>{\r\n      // console.log(err)\r\n      // dispatch({\r\n      //   type: GET_ERRORS,\r\n      //   payload: err.response.data\r\n      // })\r\n      history.push(\"/not-found\");\r\n    });\r\n};\r\n\r\n// Get all profiles\r\nexport const getAllProfiles = () => (dispatch) => {\r\n  dispatch(setProfileLoading());\r\n  console.log(\"get all profiles\");\r\n  axios\r\n    .get(`/api/profile/all`)\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_ALL_PROFILES,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err)\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    });\r\n};\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Clear current profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n\r\n//Clear profile\r\nexport const clearProfile = () => {\r\n  return {\r\n    type: CLEAR_PROFILE\r\n  }\r\n}\r\n\r\n//Get suggestion list\r\nexport const getSuggestionList = () => dispatch => {\r\n   dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile/suggestions\")\r\n    .then(res => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: {}\r\n      })\r\n    })\r\n};\r\n\r\n//Follow a user\r\nexport const followUser = (profileId) => dispatch => {\r\n  axios\r\n    .post(`/api/profile/follow/${profileId}`)\r\n    .then(res => {\r\n      console.log(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\n//Unfollow a user\r\nexport const unfollowUser = (profileId) => dispatch => {\r\n  axios\r\n    .post(`/api/profile/unfollow/${profileId}`)\r\n    .then(res => {\r\n      console.log(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n}\r\n\r\n//Get following list of current user\r\nexport const getFollowingList = () => dispatch => {\r\n  dispatch({\r\n    type: GET_FOLLOWING,\r\n    payload: null\r\n  });\r\n  axios\r\n    .get(\"/api/profile/following\")\r\n    .then(res => {\r\n      // const result = res.data.map(item => item.user.toString());\r\n      let result = res.data.filter((item) => item.user !== null);\r\n      result = result.map(item => item.user.toString());\r\n      dispatch({\r\n        type: GET_FOLLOWING,\r\n        payload: result\r\n      })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n// Upload avatar\r\nexport const addPicture = (newPic, history) => dispatch => {\r\n     console.log(newPic);\r\n  axios.post('/api/users/editAvatar', newPic).then(res =>{\r\n  window.alert(\"Profile picture uploaded\")\r\n  history.push(\"/profile\")\r\n  })\r\n  .catch((err) => {\r\n      // console.log(err)\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    });\r\n};\r\n// Remove avatar\r\nexport const removeAvatar = () => (dispatch) => {\r\n         axios\r\n           .put(\"/api/users/removeAvatar\")\r\n           .then((res) => window.location.reload(true))\r\n           .catch((err) => {\r\n             // console.log(err)\r\n             dispatch({\r\n               type: GET_ERRORS,\r\n               payload: {},\r\n             });\r\n           });\r\n         \r\n       };\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\types.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\CreateProfile.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Profile.js",["250","251","252"],"import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport Settings from \"./Settings\";\r\nimport Followers from \"../follow/Followers\";\r\nimport Following from \"../follow/Following\";\r\nimport { deleteAccount, getFollowingList } from \"../../actions/profileActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport ProfilePostItem from \"./ProfilePostItem\";\r\nimport { getUserPosts } from \"../../actions/postActions\";\r\nimport ProfilePicture from \"./ProfilePicture\";\r\n// import { getCurrentProfile } from \"../../actions/profileActions\";\r\nimport { removeAvatar } from \"../../actions/profileActions\";\r\n\r\nexport class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showFollowers: false,\r\n      showFollowing: false,\r\n      change: false,\r\n      posts: [],\r\n      saved: false,\r\n      postsIcon: true,\r\n      savedIcon: false,\r\n    };\r\n  }\r\n  showFollowersList = (e) => {\r\n    this.setState({\r\n      showFollowers: !this.state.showFollowers,\r\n    });\r\n  };\r\n  showFollowingList = (e) => {\r\n    this.setState({\r\n      showFollowing: !this.state.showFollowing,\r\n    });\r\n  };\r\n  showSettings = (e) => {\r\n    this.setState({\r\n      show: !this.state.show,\r\n    });\r\n  };\r\n  changeProfilePicture = (e) => {\r\n    this.setState({\r\n      change: !this.state.change,\r\n    });\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    this.props.deleteAccount(this.props.history);\r\n  };\r\n\r\n  onRemove =(e) => {\r\n    this.props.removeAvatar();\r\n  }\r\n  logoutUserHandle = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Logging out..\");\r\n    this.props.history.push(\"/\");\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.profile !== null && !this.props.loading && !this.props.loadingPost && this.props.userPosts) {\r\n      this.setState({\r\n        posts: this.props.userPosts,\r\n        saved: false\r\n      });\r\n    }\r\n  }\r\n\r\n  getPosts() {\r\n    this.setState({\r\n      posts: this.props.userPosts,\r\n      saved: false,\r\n      postsIcon: true,\r\n      savedIcon: false,\r\n    });\r\n  }\r\n\r\n  getSavedPosts() {\r\n    this.setState({\r\n      posts: this.props.profile.saved,\r\n      saved: true,\r\n      postsIcon: false,\r\n      savedIcon: true,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    let profileContent;\r\n    let following;\r\n    let followers;\r\n    const { profile, loading, followingList } = this.props;\r\n    const { user } = this.props.auth;\r\n    const { userPosts, loadingPost } = this.props;\r\n    const {postsIcon, savedIcon} = this.state;\r\n   if(profile.following.length > 0) {\r\n     following = profile.following.filter(item => item.user !== null)\r\n   } // filtering out deleted profiles\r\n  if (profile.followers.length > 0) {\r\n     followers = profile.followers.filter(item=> item.user !== null);\r\n  }\r\n    if (profile === null || loading || loadingPost || !userPosts) {\r\n      profileContent = <Spinner />;\r\n    } else {\r\n      let savedTab;\r\n      let addPostTab;\r\n      if (user.id === profile.user._id) {\r\n        addPostTab = (\r\n          <Link to='/create-post' className=\"profileTab\">\r\n            <i className='far fa-plus-square'>\r\n              <span\r\n                style={{\r\n                  marginLeft: \"5px\",\r\n                  fontFamily: \"sans-serif\",\r\n                }}\r\n              >\r\n                ADD POST\r\n              </span>\r\n            </i>\r\n          </Link>\r\n        );\r\n        savedTab = (\r\n          <div type=\"button\" onClick={this.getSavedPosts.bind(this)} className={`profileTab ${savedIcon ? \"activeStyle\" : \"\"}`}>\r\n            <i className={`fa fa-bookmark-o ${savedIcon ? \"activeTextStyle\" : \"\"}`} aria-hidden='true' style={savedIcon ? {color: \"black\"}: {}}>\r\n              <span style={{ marginLeft: \"5px\", fontFamily: \"sans-serif\" }}>\r\n                SAVED\r\n              </span>\r\n            </i>\r\n          </div>\r\n        )\r\n      }\r\n      profileContent = (\r\n        <Fragment>\r\n          <div className='margin'>\r\n            {user.id === profile.user._id ? (\r\n              <div>\r\n                <Link onClick={(e) => this.changeProfilePicture()}>\r\n                  <img\r\n                    className='profile-photo'\r\n                    alt='profile-photo'\r\n                    src={profile.user.avatar}\r\n                  />\r\n                </Link>\r\n                <ProfilePicture\r\n                  change={this.state.change}\r\n                  close={this.changeProfilePicture}\r\n                  remove={this.onRemove}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <img\r\n                className='profile-photo'\r\n                alt='profile-photo'\r\n                src={profile.user.avatar}\r\n              />\r\n            )}\r\n            <div className='d-flex flex-column space'>\r\n              <h2 className='HandleName'>\r\n                {profile.user.name}\r\n                {user.id === profile.user._id && (\r\n                  <span>\r\n                    <Link\r\n                      to='/edit-profile'\r\n                      type='button'\r\n                      className='btn profileButton'\r\n                    >\r\n                      Edit profile\r\n                    </Link>\r\n                    <Link onClick={(e) => this.showSettings()}>\r\n                      <i\r\n                        style={{ fontSize: \"1.5rem\", color: \"black\" }}\r\n                        className='fas fa-cog'\r\n                      ></i>\r\n                    </Link>\r\n                    <Settings\r\n                      show={this.state.show}\r\n                      close={this.showSettings}\r\n                      onDelete={this.onDelete}\r\n                      onLogout={this.logoutUserHandle}\r\n                    />\r\n                  </span>\r\n                )}\r\n              </h2>\r\n              <div className='textsize'>\r\n                <span>\r\n                  {userPosts.length > 0 ? (\r\n                    <Link to='#'>\r\n                      <b>{userPosts.length}</b> posts\r\n                    </Link>\r\n                  ) : (\r\n                    <Fragment>\r\n                      {\" \"}\r\n                      <b style={{ fontSize: \"18px\" }}>0</b>{\" \"}\r\n                      <span style={{ fontSize: \"18px\" }}>posts</span>\r\n                    </Fragment>\r\n                  )}\r\n                  &nbsp; &nbsp; &nbsp;&nbsp;\r\n                  {profile.followers.length > 0 ? (\r\n                    <Link onClick={(e) => this.showFollowersList()}>\r\n                      <b>{followers.length}</b> followers\r\n                    </Link>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <b style={{ fontSize: \"18px\" }}>0</b>{\" \"}\r\n                      <span style={{ fontSize: \"18px\" }}>followers</span>\r\n                    </Fragment>\r\n                  )}\r\n                  <Followers\r\n                    showFollowers={this.state.showFollowers}\r\n                    // followers={profile.followers}\r\n                    followingList={followingList}\r\n                    close={this.showFollowersList}\r\n                    followers={followers}\r\n                  />\r\n                  &nbsp; &nbsp; &nbsp;\r\n                  {profile.following.length > 0 ? (\r\n                    <Link onClick={(e) => this.showFollowingList()}>\r\n                      <b>{following.length}</b> following\r\n                    </Link>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <b style={{ fontSize: \"18px\" }}>0</b>{\" \"}\r\n                      <span style={{ fontSize: \"18px\" }}>following</span>\r\n                    </Fragment>\r\n                  )}\r\n                  <Following\r\n                    showFollowing={this.state.showFollowing}\r\n                    // following={profile.following}\r\n                    followingList={followingList}\r\n                    close={this.showFollowingList}\r\n                    following={following}\r\n                  />\r\n                </span>\r\n              </div>\r\n              <p style={{ marginTop: \"20px\" }} className='profileName'>\r\n                {profile.handle}\r\n              </p>\r\n              <br />\r\n              {profile.bio && (\r\n                <div\r\n                  style={{\r\n                    wordBreak: \"break-word\",\r\n                    marginTop: \"-30px\",\r\n                    fontWeight: \"400\",\r\n                    fontStyle: \"Roboto, Helvetica, Arial, sans-serif\",\r\n                    fontSize: \"16px\",\r\n                    marginBottom: \"5px\",\r\n                  }}\r\n                >\r\n                  {profile.bio}\r\n                </div>\r\n              )}\r\n              {profile.website && (\r\n                <span>\r\n                  <a\r\n                    href={profile.website}\r\n                    style={{ color: \"rgba(var(--fe0,0,55,107),1)\" }}\r\n                  >\r\n                    {profile.website}\r\n                  </a>\r\n                </span>\r\n              )}\r\n\r\n              {/* Social network Links */}\r\n              <span>\r\n                {profile.social && profile.social.facebook && (\r\n                  <a href={profile.social.facebook}>\r\n                    <i className='fa fa-facebook-square'></i>\r\n                  </a>\r\n                )}\r\n                {profile.social && profile.social.youtube && (\r\n                  <a href={profile.social.youtube}>\r\n                    <i\r\n                      className='fa fa-youtube-play youtube'\r\n                      aria-hidden='true'\r\n                    ></i>\r\n                  </a>\r\n                )}\r\n                {profile.social && profile.social.twitter && (\r\n                  <a href={profile.social.twitter}>\r\n                    <i className='fa fa-twitter twitter' aria-hidden='true'></i>\r\n                  </a>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <hr className='horizontalLine' /> */}\r\n          <div className='profileTabs icons'>\r\n            <div\r\n              type='button'\r\n              onClick={this.getPosts.bind(this)}\r\n              className={`profileTab ${postsIcon ? \"activeStyle\" : \"\"}`}\r\n            >\r\n              <i\r\n                className='fa fa-picture-o'\r\n                aria-hidden='true'\r\n                style={postsIcon ? { color: \"black\" } : {}}\r\n              >\r\n                <span style={{ marginLeft: \"5px\", fontFamily: \"sans-serif\" }}>\r\n                  POSTS\r\n                </span>\r\n              </i>\r\n            </div>\r\n            {addPostTab}\r\n            {savedTab}\r\n            <div className='profileTab'>\r\n              <i className='far fa-user-circle' aria-hidden='true'>\r\n                <span style={{ marginLeft: \"5px\", fontFamily: \"sans-serif\" }}>\r\n                  TAGGED\r\n                </span>\r\n              </i>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.posts.length > 0 ? (\r\n            //  <Fragment>\r\n            //    {userPosts.map(post => (\r\n            //      <ProfilePostItem key={post._id} postItem={post} id={post._id} image={post.image}/>\r\n            //    ))}\r\n            //  </Fragment>\r\n            <Fragment>\r\n              <section className='row responsiveness hover-effect'>\r\n                {/* <ProfilePostItem posts={userPosts} /> */}\r\n                <ProfilePostItem\r\n                  posts={this.state.posts}\r\n                  saved={this.state.saved}\r\n                />\r\n              </section>\r\n            </Fragment>\r\n          ) : (\r\n            <div\r\n              className='HandleName'\r\n              style={{ textAlign: \"center\", marginTop: \"100px\" }}\r\n            >\r\n              {\" \"}\r\n              <div>\r\n                <i class='fa fa-camera' aria-hidden='true'></i>\r\n              </div>\r\n              No Posts Yet\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          {profileContent}\r\n \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n const mapStateToProps = (state) => ({ \r\n   auth: state.auth\r\n });\r\nexport default connect(mapStateToProps, {\r\n  deleteAccount,\r\n  logoutUser,\r\n  getFollowingList,\r\n  removeAvatar,\r\n})(Profile);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\EditProfile.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\CurrentProfile.js",["253"],"import React, { Component, Fragment } from 'react';\r\nimport Profile from './Profile';\r\nimport { getCurrentProfile, getFollowingList } from \"../../actions/profileActions\";\r\nimport { getUserPosts } from \"../../actions/postActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from '../common/Spinner';\r\n\r\nclass CurrentProfile extends Component {\r\n\r\n componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n    this.props.getUserPosts();\r\n    this.props.getFollowingList();\r\n  }\r\n  render() {\r\n    // console.log(this.props.profile.profile);\r\n    const {currentProfile, loading, followingList } = this.props.profile;\r\n    let content;\r\n     const { userPosts, loadingPost } = this.props.post;\r\n        // console.log(userPosts)\r\n          if (loading || loadingPost || currentProfile === null || userPosts === null || followingList === null) {\r\n            content = ( <Spinner /> )\r\n          } else {\r\n            content = (\r\n              <div>\r\n                <Profile\r\n                  profile={currentProfile}\r\n                  loading={loading}\r\n                  userPosts={userPosts}\r\n                  loadingPost={loadingPost}\r\n                  isCurrentProfile={true}\r\n                  followingList={followingList}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n          \r\n    return <div> {content}</div>;\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  getUserPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  // auth: state.auth,\r\n  profile: state.profile,\r\n  post: state.post,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getCurrentProfile,\r\n  getUserPosts,\r\n  getFollowingList,\r\n})(CurrentProfile);\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\HandleProfile.js",["254"],"import React, { Component, Fragment } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { getOtherUsersPosts } from \"../../actions/postActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { getProfileByHandle, getFollowingList } from '../../actions/profileActions';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass HandleProfile extends Component {\r\n  componentDidMount() {\r\n  // if (this.props.match.params.user_id) {\r\n  //   this.props.getOtherUsersPosts(this.props.match.params.user_id);\r\n  // }\r\n   if (this.props.match.params.handle) {\r\n    this.props.getProfileByHandle(this.props.match.params.handle, this.props.history);\r\n    this.props.getOtherUsersPosts(this.props.match.params.handle);\r\n    }\r\n    this.props.getFollowingList();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.match && nextProps.match.params && this.props.match && this.props.match.params) {\r\n      if (nextProps.match.params.handle !== this.props.match.params.handle) {\r\n        // console.log(nextProps.match.params.handle);\r\n        // console.log(this.props.match.params.handle)\r\n        window.location.reload(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.profile.profile);\r\n    const { profile, loading, followingList } = this.props.profile;\r\n    let content;\r\n    const { userPosts, loadingPost } = this.props.post;\r\n    // console.log(userPosts);\r\n    // console.log(profile);\r\n \r\n\r\n    if (loading || loadingPost || profile === null || userPosts === null || followingList === null) {\r\n      content = ( <Spinner /> )\r\n    } else {\r\n      content = (\r\n        <div>\r\n          <Profile\r\n            profile={profile}\r\n            loading={loading}\r\n            userPosts={userPosts}\r\n            loadingPost={loadingPost}\r\n            isCurrentProfile={true}\r\n            followingList={followingList}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <div> {content}</div>;\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getProfileByHandle: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  getOtherUsersPosts: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  // auth: state.auth,\r\n  profile: state.profile,\r\n  post: state.post,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getOtherUsersPosts,\r\n  getProfileByHandle,\r\n  getFollowingList\r\n})(withRouter(HandleProfile));\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\UploadAvatar.js",["255","256","257"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport defaultImage from \"../../img/defaultImage.jpg\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPicture } from \"../../actions/profileActions\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport is_empty from \"../../validation/is-empty\";\r\n\r\nclass UploadAvatar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showDefault: true,\r\n      fileData: new FormData(),\r\n      src: null,\r\n      crop: {\r\n        unit: \"%\",\r\n        width: 90,\r\n        aspect: 1 / 1,\r\n      },\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {currentProfile} = this.props.profile;\r\n    if (currentProfile) {\r\n      this.setState({croppedImageUrl: currentProfile.user.avatar});\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {currentProfile} = nextProps.profile;\r\n    if (currentProfile) {\r\n      this.setState({croppedImageUrl: currentProfile.user.avatar});\r\n    }\r\n  }\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      this.uploadImage(croppedImageUrl);\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n    return canvas.toDataURL(\"image/jpeg\");\r\n  }\r\n  // upload cropped image to cloudinary\r\n  uploadImage = (croppedImageUrl) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", croppedImageUrl);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    this.setState({\r\n      fileData: data,\r\n      showDefault: false,\r\n      // image: URL.createObjectURL(croppedImageUrl),\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // e.preventDefault();\r\n    fetch(\"https://api.cloudinary.com/v1_1/instagramteam/image/upload\", {\r\n      method: \"POST\",\r\n      body: this.state.fileData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newPic = {\r\n          avatar: result.secure_url,\r\n        };\r\n        this.props.addPicture(newPic, this.props.history);\r\n        console.log(newPic);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const enabled = !is_empty(this.state.src);\r\n    return (\r\n      <div style={{width: \"60%\", justifyContent: \"center\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n      <div\r\n        style={{ marginTop: \"30px\", position: \"relative\" }}\r\n      >\r\n        <div className='row'>\r\n          <div className='col-md-6 col-sm-12 d-flex flex-column'>\r\n            <input\r\n              type='file'\r\n              name='file'\r\n              // onClick={e => this.uploadImage}\r\n              style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\r\n              accept='image/*'\r\n              onChange={this.onSelectFile}\r\n              required\r\n            />\r\n            {src && (\r\n              <ReactCrop\r\n                src={src}\r\n                crop={crop}\r\n                // ruleOfThirds\r\n                onImageLoaded={this.onImageLoaded}\r\n                onComplete={this.onCropComplete}\r\n                onChange={this.onCropChange}\r\n              />\r\n            )}\r\n            {/* {croppedImageUrl && (\r\n              <img\r\n                alt='Crop'\r\n                style={{\r\n                  // maxWidth: \"100%\",\r\n                  position: \"absolute\",\r\n                  top: \"56px\",\r\n                  left: \"400px\",\r\n                  width: \"200px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n                src={croppedImageUrl}\r\n              />\r\n            )} */}\r\n            {this.state.showDefault && (\r\n              <img\r\n                src={defaultImage}\r\n                className='create-post-default-image-style'\r\n                alt='default image'\r\n                style={{marginTop: \"0px\"}}\r\n              />\r\n            )}\r\n          </div>{\" \"}\r\n          <div className=\"col-md-6 col-sm-12 d-flex flex-column\">\r\n            <div style={{marginLeft: \"20px\"}}>\r\n              {/* Show cropped image */}\r\n              <div style={{marginTop: \"2px\"}}><span style={{fontSize: \"1.75rem\"}}>Update Avatar</span></div>\r\n              <div style={{height: \"300px\"}}>\r\n                {croppedImageUrl && (\r\n                  <img\r\n                    alt='Crop'\r\n                    style={{\r\n                      // maxWidth: \"100%\",\r\n                      // position: \"absolute\",\r\n                      top: \"56px\",\r\n                      // left: \"400px\",\r\n                      width: \"200px\",\r\n                      borderRadius: \"50%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                    src={croppedImageUrl}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: \"30px\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={this.onSubmit}\r\n                  type='submit'\r\n                  value='Upload'\r\n                  className='btn btn-primary'\r\n                  style={{ width: \"70px\", height: \"35px\", marginRight: \"10px\" }}\r\n                  disabled='disabled'\r\n                  disabled={!enabled}\r\n                >\r\n                  Upload\r\n                </button>     \r\n\r\n                <Link to='/profile' className='btn btn-secondary'>\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPicture })(\r\n  withRouter(UploadAvatar)\r\n);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Profiles.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\auth\\Login.js",["258","259"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../img/logo.png\";\r\nimport mobile from \"../../img/mobile.png\";\r\nimport axios from 'axios'\r\nimport classnames from 'classnames';\r\nimport \"./login.css\"; \r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport { getCurrentProfile } from \"../../actions/profileActions\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    this.props.loginUser(user);\r\n    // this.props.getCurrentProfile();\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/home');\r\n    }\r\n  }\r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.auth.isAuthenticated) {\r\n        this.props.history.push('/home');\r\n      }\r\n      if (nextProps.errors) {\r\n        this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n    render() {\r\n    const { errors } = this.state;\r\n    const { email, password } = this.state;\r\n    const enabled = email.length > 0 && password.length > 0;\r\n    return (\r\n      <div className='margin'>\r\n        <img className='mobile d-none d-xl-block d-md-block' src={mobile} />\r\n        <div className='d-flex flex-column height'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <img className='logo' src={logo} alt='instagram' />\r\n              <br />\r\n              <br />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='email'\r\n                    id='myText'\r\n                    className={classnames(\"form-control\", {\r\n                      \"is-invalid\": errors.email,\r\n                    })}\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.email && (\r\n                    <div className='invalid-feedback'>{errors.email}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames(\"form-control \", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className='invalid-feedback'>{errors.password}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  value='Log In'\r\n                  disabled={!enabled}\r\n                  // style={{\r\n                  //   width: \"265px\",\r\n                  //   height: \"30px\",\r\n                  //   marginTop: \"10px\",\r\n                  //   border: \"None\",\r\n                  // }}\r\n                  className='authButton'\r\n                />\r\n              </form>\r\n              <br />\r\n              <div>\r\n                <hr id='one' />\r\n                <span id='or'>OR</span>\r\n                <hr id='two' />\r\n              </div>\r\n              <br />\r\n              <p className='more-info'>\r\n                Don't have an account? &nbsp;\r\n                <span>\r\n                  <Link to='/signup'>Sign up</Link>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n getCurrentProfile: PropTypes.func.isRequired,\r\n loginUser: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  auth: state.auth,\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser, getCurrentProfile })(Login);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\auth\\Signup.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\navbar\\Navbar.js",["260","261","262","263","264","265","266","267"],"import React, { Component } from \"react\";\r\nimport \"./navbar.css\";\r\nimport logo from \"../../img/logo.png\";\r\nimport { Link, withRouter} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Search from \"../search/Search\";\r\nimport spinner from \"../common/spinner.gif\";\r\n\r\nexport class Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      home: false,\r\n      explore: false,\r\n      gallery: false,\r\n      avatarIcon: false,\r\n    };\r\n    this.logoutUserHandle = this.logoutUserHandle.bind(this);\r\n  }\r\n\r\n  logoutUserHandle(e) {\r\n    e.preventDefault();\r\n    this.props.history.push(\"/\");\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  checkPathName(pathName) {\r\n    if (pathName == \"/home\") {\r\n      this.setState({\r\n        home: true,\r\n        explore: false,\r\n        gallery: false,\r\n        avatarIcon: false,\r\n      });\r\n    } else if (pathName == \"/explore\") {\r\n      this.setState({\r\n        home: false,\r\n        explore: true,\r\n        gallery: false,\r\n        avatarIcon: false,\r\n      });\r\n    } else if (pathName == \"/gallery\") {\r\n      console.log(\"hit gallery\");\r\n      this.setState({\r\n        home: false,\r\n        explore: false,\r\n        gallery: true,\r\n        avatarIcon: false,\r\n      })\r\n    } else if (pathName == \"/profile\" || pathName == \"/current-profile\") {\r\n      this.setState({\r\n        home: false,\r\n        explore: false,\r\n        gallery: false,\r\n        avatarIcon: true,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        home: false,\r\n        explore: false,\r\n        gallery: false,\r\n        avatarIcon: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pathName = this.props.history.location.pathname;\r\n    this.checkPathName(pathName);\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    const pathName = nextProps.history.location.pathname;\r\n    this.checkPathName(pathName);\r\n  }\r\n  \r\n  render() {\r\n    // console.log(this.props.history);\r\n    const {isAuthenticated, user} = this.props.auth;\r\n    const { currentProfile } = this.props.profile;\r\n    //Get real avatar of user from redux store\r\n    const avatar = currentProfile ? currentProfile.user.avatar : spinner;\r\n    const {home, explore, gallery, avatarIcon} = this.state;\r\n    //Put all navbar contents into variable \"navbar\" \r\n    const navbar = (\r\n      <nav\r\n        className='navbar navbar-light navbar-expand-lg'\r\n        style={{ backgroundColor: \"white\", padding: \"0px\" }}\r\n      >\r\n        <div className='container'>\r\n          <Link className='navbar-brand' to=''>\r\n            <img className='logo-navbar' alt='Instagram' src={logo} />\r\n          </Link>\r\n\r\n          {/* <div className='search d-none d-xl-block'>\r\n            <span className='fa fa-search'></span>\r\n            <input\r\n              className='form-control form-control-sm'\r\n              type='search'\r\n              placeholder='Search..'\r\n            />\r\n          </div> */}\r\n\r\n          <Search/>\r\n          <ul style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n            <li>\r\n              <Link to='/home'>\r\n                {/* <i className='fa fa-home navbarIcon' aria-hidden='true'></i> */}\r\n                {!home && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-house-door navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M7.646 1.146a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 .146.354v7a.5.5 0 0 1-.5.5H9.5a.5.5 0 0 1-.5-.5v-4H7v4a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .146-.354l6-6zM2.5 7.707V14H6v-4a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4h3.5V7.707L8 2.207l-5.5 5.5z\"/>\r\n                  <path fillRule=\"evenodd\" d=\"M13 2.5V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\r\n                </svg>}\r\n                {home && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-house-door-fill navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M6.5 10.995V14.5a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .146-.354l6-6a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 .146.354v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5V11c0-.25-.25-.5-.5-.5H7c-.25 0-.5.25-.5.495z\"/>\r\n                  <path fillRule=\"evenodd\" d=\"M13 2.5V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\r\n                </svg>}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/explore'>\r\n                {/* <i className='fa fa-compass navbarIcon' aria-hidden='true'></i> */}\r\n                {!explore && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-cursor navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103zM2.25 8.184l3.897 1.67a.5.5 0 0 1 .262.263l1.67 3.897L12.743 3.52 2.25 8.184z\"/>\r\n                </svg>}\r\n                {explore && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-cursor-fill navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z\"/>\r\n                </svg>}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/gallery'>\r\n                {/* <i className='fas fa-images navbarIcon' aria-hidden='true'></i> */}\r\n                {!gallery && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-grid-3x3-gap navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M4 2H2v2h2V2zm1 12v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 10v-2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 2H7v2h2V2zm5 0h-2v2h2V2zM4 7H2v2h2V7zm5 0H7v2h2V7zm5 0h-2v2h2V7zM4 12H2v2h2v-2zm5 0H7v2h2v-2zm5 0h-2v2h2v-2zM12 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zm-1 6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-2z\"/>\r\n                </svg>}\r\n                {gallery && <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid-3x3-gap-fill navbarIcons\" fill=\"black\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z\"/>\r\n                </svg>}\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to='/profile'>\r\n                {!avatarIcon && <img className='avatar navbarIcon' src={avatar} alt='Avatar' />}\r\n                {avatarIcon && <img className='avatar navbarIcon' src={avatar} alt='Avatar'  style={{border: \"1px solid black\", padding: \"1.5px\"}}/>}\r\n              </Link>\r\n            </li>\r\n            \r\n            <li style={{ marginTop: \"10px\" }}>\r\n              <Link\r\n                onClick={this.logoutUserHandle}\r\n                // style={{\r\n                //   fontSize: \"0.9em\",\r\n                //   fontFamily: \"sans-serif\",\r\n                //   color: \"black\",\r\n                // }}\r\n              >\r\n                <span className='navbarIcon' style={{ fontSize: \"0.9em\" }}>\r\n                  Log out\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n    return (\r\n      <div>\r\n        {/* Check if user is isAuthenticated, if yes - show Navbar, if no - hide Navbar */}\r\n        {isAuthenticated ? navbar : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n   \r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile:state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\r\n  \r\n\r\n              {/* Conditional rendering of dropdown -- on click to do in react*/}\r\n              {/* <div className='dropdown'>\r\n                <section\r\n                  className='avatar-wrapper dropdown-toggle'\r\n                  id='profileDropDownMenu'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <img\r\n                    className='avatar navbarIcon'\r\n                    src={avatar}\r\n                    alt='Avatar'\r\n                  />\r\n                  <div\r\n                    className='log-toolContainer dropdown-menu'\r\n                    aria-labelledby='profileDropDownMenu'\r\n                  >\r\n                    <div className='log-popover'>\r\n                      <Link to='#'>\r\n                        <i\r\n                          className='fa fa-user'\r\n                          aria-hidden='true'\r\n                          style={{ marginRight: \"8px\" }}\r\n                        ></i>\r\n                        Profile\r\n                      </Link>\r\n                      <Link to='#'>\r\n                        <i\r\n                          className='fa fa-bookmark-o'\r\n                          style={{ marginRight: \"8px\", marginBottom: \"1px\" }}\r\n                          aria-hidden='true'\r\n                        ></i>\r\n                        Saved\r\n                      </Link>\r\n                      <hr\r\n                        className='lineTopMargin'\r\n                        style={{ marginTop: \"1px\" }}\r\n                      />\r\n                      <Link to='#' style={{ marginTop: \"-15px\" }}>\r\n                        Log out\r\n                      </Link>\r\n                    </div> \r\n                   </div> \r\n                 </section>\r\n              </div> */}\r\n       \r\n \r\n\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\footer\\Footer.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\Post.js",["268"],"import React, { Component } from \"react\";\r\nimport \"./post.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddComment from \"./AddComment\";\r\nimport Comments from \"./Comments\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPost, deletePost } from \"../../actions/postActions\";\r\nimport Moment from \"react-moment\"; \r\nimport Spinner from \"../common/Spinner\";\r\nimport {addLike, removeLike, savePost, unsavePost} from \"../../actions/postActions\" \r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n  \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getPost(this.props.match.params.id, this.props.history);\r\n  }\r\n\r\n  goBack() {\r\n    this.props.history.goBack();\r\n  }\r\n  onDeletePost(postId, history) {\r\n    this.props.deletePost(postId, history);\r\n  }\r\n\r\n  render() {\r\n    const {post, loadingPost} = this.props.post;\r\n    console.log(post.user);\r\n    const postId = this.props.match.params.id;\r\n    \r\n    let content;\r\n    if (loadingPost || post === null) {\r\n      content = <Spinner />\r\n    } \r\n    if (post && post.user) {\r\n      let deleteIcon;\r\n    let alreadyLiked = false;\r\n    if(post.likes !== undefined) {\r\n    if(post.likes.filter(like => like.user === this.props.auth.user.id).length > 0)\r\n    {\r\n      alreadyLiked = true;\r\n    }\r\n   }\r\n  let alreadySaved = false;\r\n  if (post.saved !== undefined) {\r\n    if (\r\n      post.saved.filter((save) => save.user === this.props.auth.user.id)\r\n        .length > 0\r\n    ) {\r\n      alreadySaved = true;\r\n    }\r\n  }\r\n \r\n     if (post.user._id === this.props.auth.user.id) {\r\n       deleteIcon = (\r\n         <div\r\n           type='button'\r\n           className='delete-post'\r\n           onClick={this.onDeletePost.bind(this, post._id, this.props.history)}\r\n         >\r\n           <i\r\n             style={{\r\n               fontSize: \"1.5em\",\r\n               float: \"right\",\r\n               padding: \"5px\",\r\n               marginTop: \"-3px\",\r\n               fontWeight: \"lighter\",\r\n             }}\r\n             className='fa fa-trash'\r\n             aria-hidden='true'\r\n           ></i>\r\n         </div>\r\n       );\r\n     }\r\n    const icons = (\r\n      <div>\r\n        {alreadyLiked === true ? (\r\n          <div type='button' className='icons-post'>\r\n            <i\r\n              onClick={() => {\r\n                this.props.removeLike(post._id);\r\n              }}\r\n              className='fa fa-heart'\r\n              style={{ fontSize: \"1.5em\", color: \"red\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            type='button'\r\n            onClick={() => this.props.addLike(post._id)}\r\n            className='icons-post'\r\n          >\r\n            <i\r\n              className='fa fa-heart-o'\r\n              style={{ fontSize: \"1.5em\", color: \"black\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        )}\r\n        {/* <div type='button' className='icons-post'>\r\n          <i\r\n            style={{ fontSize: \"1.5em\" }}\r\n            className='fa fa-comment-o'\r\n            aria-hidden='true'\r\n          ></i>\r\n        </div>\r\n\r\n        <div type='button' className='icons-post'>\r\n          <i\r\n            style={{ fontSize: \"1.5em\" }}\r\n            className='far fa-user-circle'\r\n            aria-hidden='true'\r\n          ></i>\r\n        </div> */}\r\n        {alreadySaved === true ? (\r\n          <div type='button' className='icons-post'>\r\n            <i\r\n              onClick={() => {\r\n                this.props.unsavePost(post._id);\r\n              }}\r\n              style={{ fontSize: \"1.5em\" }}\r\n              className='fa fa-bookmark'\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div type='button' className='icons-post'>\r\n            <i\r\n              onClick={() => {\r\n                this.props.savePost(post._id);\r\n              }}\r\n              style={{ fontSize: \"1.5em\" }}\r\n              className='fa fa-bookmark-o'\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        )}\r\n\r\n        {/* delete post */}\r\n        {deleteIcon}\r\n      </div>\r\n    );\r\n      content = (\r\n        <div className='child'>\r\n          <span className='close'>\r\n            <button onClick={this.goBack}>\r\n              <i className='fa fa-times' aria-hidden='true'></i>\r\n            </button>\r\n          </span>\r\n\r\n          <div className='container-post'>\r\n            <img\r\n              className='size-of-image'\r\n              src={post.image}\r\n            />\r\n            <div className='style d-none d-xl-block d-md-none d-lg-none d-sm-none '>\r\n              <Link to={`/profile/${post.handle}`}>\r\n                <img className='avatar-icon' src={post.user.avatar} alt='Avatar' />\r\n              </Link>\r\n              <Link to={`/profile/${post.handle}`} className='name-of-account'>\r\n                {post.name}\r\n              </Link>\r\n              <hr style={{ marginBottom: \"10px\" }} />\r\n\r\n              {/*  post description & comments on post */}\r\n              <div>\r\n                <section className='row'>\r\n                  {/* <!-- post description start--> */}\r\n\r\n                  <div className='col-lg-2'>\r\n                    <Link to={`/profile/${post.handle}`}>\r\n                      <img className='avatar-icon' src={post.user.avatar} alt='Avatar' />\r\n                    </Link>\r\n                  </div>\r\n                  <div className='col-lg-10'>\r\n                    <div id='col-space'>\r\n                      <Link className='handlename-post' to={`/profile/${post.handle}`}>\r\n                        {post.name}\r\n                      </Link>\r\n                      <span className='textStyle-comment'>\r\n                        &nbsp; {post.text}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </div>\r\n               {/* <!-- post description end--> */}\r\n\r\n               {/* comments on post */}\r\n              <div className='comment-wrapper'>\r\n                <section>\r\n                  <Comments comments={post.comments} postId={postId} \r\n                  // showAvatar={true}\r\n                  />\r\n                </section>\r\n              </div>\r\n                 \r\n\r\n                 \r\n              \r\n              <div id='footer'>\r\n                <hr />\r\n                <section>\r\n                  {/* Show like, save, delete icons */}\r\n                  {icons}\r\n                </section>\r\n                <div className='post-textStyle-date'>\r\n                  <div\r\n                    style={{\r\n                      fontWeight: \"600\",\r\n                      fontSize: \"1.4em\",\r\n                      color: \"black\",\r\n                    }}\r\n                  >\r\n                    {post.likes && post.likes.length} Likes\r\n                  </div>\r\n                  <Moment format=\"D MMM YYYY\">{post.date}</Moment>\r\n                </div>\r\n                <hr />\r\n                <AddComment postId={postId}/>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* section only for mobiles*/}\r\n\r\n          <div id='wrapper'>\r\n            <section className='section-only-mobile d-xl-none'>\r\n              <section>\r\n                {/* Show like, save, delete icons */}\r\n                {icons}\r\n              </section>\r\n\r\n              <p className='post-textStyle-date'>\r\n              <Moment format=\"D MMM YYYY\">{post.date}</Moment> &nbsp; <span>{post.likes && post.likes.length} Likes</span>\r\n              </p>\r\n              <AddComment />\r\n              \r\n            </section>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className='parent'>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Profile.propTypes = {\r\n  \r\n//   auth: PropTypes.object.isRequired,\r\n  \r\n//   logoutUser: PropTypes.func.isRequired,\r\n// };\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost, deletePost, addLike, removeLike, savePost, unsavePost })(Post);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\PrivateRoute.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\NotFound.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\CreatePost.js",["269","270"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport defaultImage from \"../../img/defaultImage.jpg\";\r\nimport classnames from 'classnames';\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"\",\r\n      showDefault: true,\r\n      text: \"\",\r\n      errors: {},\r\n      fileData: new FormData()\r\n    };\r\n    this.uploadImage = this.uploadImage.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  \r\n  // Get user uploaded file\r\n  uploadImage = e => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    this.setState({\r\n      fileData: data,\r\n      showDefault: false,\r\n      image: URL.createObjectURL(e.target.files[0])\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // POST image to cloudinary through the cloudinary API and append image\r\n    fetch(\r\n      \"https://api.cloudinary.com/v1_1/instagramteam/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: this.state.fileData,\r\n      }\r\n    )\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      const newPost = {\r\n        text: this.state.text,\r\n        image: result.secure_url\r\n      };\r\n  \r\n      this.props.addPost(newPost, this.props.history);\r\n    })\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"container\" style={{marginTop: \"30px\"}}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-sm-12 d-flex flex-column\">\r\n\r\n            <input\r\n              type='file'\r\n              name='file'\r\n              onChange={this.uploadImage}\r\n              style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\r\n              accept=\"image/*\"\r\n            />\r\n            \r\n            {this.state.image && <img src={this.state.image} style={{width: \"100%\", marginTop: \"20px\"}}/>}\r\n            {this.state.showDefault && <img src={defaultImage} className=\"create-post-default-image-style\" alt=\"default image\"/>}\r\n            {errors.image && (\r\n              <div style={{color: \"red\", fontSize: \"80%\"}}>{errors.image}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex flex-column col-md-8 col-sm-12\">\r\n            <p style={{fontSize: \"1.75rem\"}}>Create New Post</p>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className='form-group'>\r\n                <label className='col-form-label'>Description</label>\r\n                <textarea\r\n                  type='text'\r\n                  name='text'\r\n                  placeholder=\"Description\"\r\n                  style={{width: \"93%\", height: \"200px\"}}\r\n                  value={this.state.text}\r\n                  onChange={this.onChange}\r\n                  className={classnames(\"form-control \", {\r\n                    \"is-invalid\": errors.text,\r\n                  })}\r\n                />\r\n                {errors.text && (\r\n                  <div className='invalid-feedback'>{errors.text}</div>\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ marginTop: \"30px\" }}>\r\n                <input\r\n                  onClick={this.onClick}\r\n                  type='submit'\r\n                  value='Post'\r\n                  className='btn btn-primary'\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n                <Link to='/profile' className='btn btn-secondary'>\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPost })(withRouter(CreatePost));\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\Posts.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\gallery\\Gallery.js",["271","272","273"],"import React, { Component, Fragment } from \"react\";\r\nimport \"./gallery.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {allPostsExceptCurrentUsers} from \"../../actions/postActions\";\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../common/Spinner'\r\nimport GalleryItem from './GalleryItem';\r\n\r\n\r\nclass Gallery extends Component {\r\n  componentDidMount() {\r\n    this.props.allPostsExceptCurrentUsers();\r\n  }\r\n  render() {\r\n\r\n    const { posts, loadingPost } = this.props.post;\r\n    let imagesArray;\r\n    if(posts.length > 0) {\r\n    imagesArray = posts.map((post) => post.image);\r\n    }\r\n \r\n    return (\r\n      <div className='container masonry'>\r\n        {!loadingPost ? (\r\n          <Fragment>\r\n            {posts.map((post) => (\r\n              <GalleryItem key={post._id} image={post.image} id={post._id} />\r\n            ))}\r\n          </Fragment>\r\n        ) : (<div style={{ margin: \"180px\"}}>\r\n          <Spinner /></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n} \r\nGallery.propTypes = {\r\n  allPostsExceptCurrentUsers: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\nexport default connect(mapStateToProps, { allPostsExceptCurrentUsers })(\r\n  Gallery\r\n);","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\common\\Spinner.js",["274"],"import React, { Fragment } from 'react';\r\n// import spinner from './spinner.gif';\r\nimport spinner from './Spin-1s-200px.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img src={spinner}\r\n    style={{ width: '200px', margin:'auto', display: 'block' }}alt='Loading...'/>\r\n  </Fragment>\r\n)","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\Settings.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfilePostItem.js",["275","276","277"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\n\r\nclass ProfilePostItem extends Component {\r\n  render() {\r\n    const { post, id, image } = this.props;\r\n\r\n    return this.props.posts.map((post) => {\r\n      let id = this.props.saved === false ? post._id : post.postId;\r\n\r\n      return (\r\n        <div>\r\n          <div id='posts' className='col-lg-4 col-md-6 col-xs-12 col-xxs-12'>\r\n            <Link to={`/post/${id}`}>\r\n              <figure>\r\n                <img src={post.image} alt='posts' style={{objectFit: \"cover\"}} />\r\n              </figure>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default ProfilePostItem;\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfilePicture.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\actions\\postActions.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\profile\\ProfileCard.js",["278","279","280"],"import React, { Component, Fragment } from 'react';\r\nimport avatar from '../../img/avatar.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { followUser, unfollowUser } from \"../../actions/profileActions\";\r\n\r\nclass ProfileCard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      follow: false,\r\n    };\r\n  }\r\n\r\n  handleFollow(profileId) {\r\n    this.setState({ follow: true });\r\n    this.props.followUser(profileId);\r\n  }\r\n\r\n  handleUnfollow(profileId) {\r\n    this.setState({ follow: false });\r\n    this.props.unfollowUser(profileId);\r\n  }\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      // <div className='d-flex card profile-card-outer'>\r\n      //   <div style={{ marginTop: \"10px\" }}>\r\n      //     <Link to={`/profile/${profile.handle}/${profile.user._id}`}>\r\n      //       <img\r\n      //         className=' profile-card-avatar'\r\n      //         src={profile.user.avatar}\r\n      //         alt='avatar'\r\n      //       />\r\n      //     </Link>\r\n      //   </div>\r\n      //   <div className='profile-card-truncate-text'>{profile.user.name}</div>\r\n      //   <div className='profile-card-card-footer'>\r\n      //     {!this.state.follow && (\r\n      //       <button\r\n      //         className='btn profile-card-button-follow'\r\n      //         onClick={this.handleFollow.bind(this, profile._id)}\r\n      //       >\r\n      //         Follow\r\n      //       </button>\r\n      //     )}\r\n      //     {this.state.follow && (\r\n      //       <button\r\n      //         className='btn profile-card-button-unfollow'\r\n      //         onClick={this.handleUnfollow.bind(this, profile._id)}\r\n      //       >\r\n      //         Following\r\n      //       </button>\r\n      //     )}\r\n      //   </div>\r\n      // </div> \r\n\r\n    \r\n         <div className='d-flex'>\r\n          <div\r\n            style={{\r\n              width: \"10rem\",\r\n              height: \"10rem\",\r\n              margin: \"10px\",\r\n              marginBottom: \"100px\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <Link to={`/profile/${profile.handle}`}>\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  borderTopLeftRadius: \"5%\",\r\n                  borderTopRightRadius: \"5%\",\r\n                }}\r\n                src={profile.user.avatar}\r\n              />\r\n            </Link>\r\n            <div\r\n              style={{\r\n                borderLeft: \"1px solid rgba(var(--ce3,219,219,219),1)\",\r\n                borderRight: \"1px solid rgba(var(--ce3,219,219,219),1)\",\r\n                borderBottom: \"1px solid rgba(var(--ce3,219,219,219),1)\",\r\n                height: \"90px\",\r\n                borderBottomLeftRadius: \"5%\",\r\n                borderBottomRightRadius: \"5%\",\r\n                boxShadow: \"0 1px 5px 1px #cccccc\",\r\n                marginTop: \"-7px\",\r\n              }}\r\n            >\r\n              <div\r\n                className='profile-card-truncate-text'\r\n                style={{ marginTop: \"5px\", lineHeight: \"34px\" }}\r\n              >\r\n                {profile.user.name}\r\n              </div>\r\n              <div className='profile-card-card-footer' style={{textAlign:\"center\", marginTop:\"-10px\"}}>\r\n                {!this.state.follow && (\r\n                  <button\r\n                    className='btn profile-card-button-follow'\r\n                    onClick={this.handleFollow.bind(this, profile._id)}\r\n                  >\r\n                    Follow\r\n                  </button>\r\n                )}\r\n                {this.state.follow && (\r\n                  <button\r\n                    className='btn profile-card-button-unfollow'\r\n                    onClick={this.handleUnfollow.bind(this, profile._id)}\r\n                  >\r\n                    Following\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { followUser, unfollowUser})(ProfileCard);\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\gallery\\GalleryItem.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionsBox.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\PostFeed.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\Comments.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\AddComment.js",["281"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addComment,addCommentPosts } from \"../../actions/postActions\";\r\nimport classnames from 'classnames';\r\nimport is_empty from '../../validation/is-empty';\r\n\r\nclass AddComment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newComment = {\r\n      text: this.state.comment\r\n    };\r\n    console.log(this.props.postId);\r\n    this.props.addComment(newComment, this.props.postId);\r\n    // this.props.addCommentPosts(newComment, this.props.postId);\r\n    this.setState({comment: \"\"});\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const enabled = !is_empty(this.state.comment); \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <textarea\r\n          type='text'\r\n          name='comment'\r\n          placeholder=\"Add new comment...\"\r\n          value={this.state.comment}\r\n          onChange={this.onChange}\r\n          className=\"comment-textarea\"\r\n        ></textarea>\r\n        <input \r\n          type=\"submit\" \r\n          className='post'\r\n          value=\"Post\"\r\n          disabled={!enabled}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addComment,addCommentPosts })(AddComment);\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\Following.js",["282"],"import React, { Component } from \"react\";\r\nimport \"./follow.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowItem from \"./FollowItem\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Following extends Component {\r\n \r\n  render() {\r\n    if (!this.props.showFollowing && !this.seen) {\r\n      return null;\r\n    }\r\n    const {following, auth, followingList} = this.props;\r\n    \r\n     let content;\r\n     if (following.length > 0) {\r\n     let filterFollowing = following.filter(follow => follow.user !== null); // check if user is null to filter out deleted profiles\r\n       content = filterFollowing.map((following) => {\r\n         if (auth.user.id === following.user._id) {\r\n           return (\r\n             <FollowItem\r\n               key={following.id}\r\n               follow={following}\r\n               followingList={followingList}\r\n               isCurrent={true}\r\n             />\r\n           );\r\n         } else {\r\n           return (\r\n             <FollowItem\r\n               key={following.id}\r\n               follow={following}\r\n               followingList={followingList}\r\n               isCurrent={false}\r\n             />\r\n           );\r\n         }\r\n       });\r\n     }\r\n    return (\r\n      <div className='first'>\r\n        <div className='second'>\r\n          <div className='third'>\r\n            <div className='followers-container'>\r\n              <h5>Following </h5>\r\n              <span>\r\n                <Link onClick={() => window.location.reload(true)} className='X'>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </Link>\r\n              </span>\r\n              <hr />\r\n\r\n              <div className='container scrolling'>\r\n                <div\r\n                  className='row'\r\n                  // style={{position: \"relative\"}}\r\n                >\r\n                  {content}\r\n                </div>\r\n              </div>\r\n              {/* followers-container ends */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(Following);\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\Followers.js",["283"],"import React, { Component } from 'react';\r\nimport \"./follow.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowItem from './FollowItem';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Followers extends Component {\r\n\r\n  render() {\r\n     const {auth} = this.props;\r\n\r\n     if (!this.props.showFollowers) {\r\n       return null;\r\n     }\r\n     const {followers, followingList} = this.props;\r\n     let content;\r\n     if (followers.length > 0) {\r\n       let filterFollowers = followers.filter((follow) => follow.user !== null); // check if user is null to filter out deleted profiles\r\n       content = filterFollowers.map((follower) => {\r\n         if (auth.user.id === follower.user._id) {\r\n           return (\r\n             <FollowItem\r\n               key={follower.id}\r\n               follow={follower}\r\n               followingList={followingList}\r\n               isCurrent={true}\r\n             />\r\n           );\r\n         } else {\r\n           return (\r\n             <FollowItem\r\n               key={follower.id}\r\n               follow={follower}\r\n               followingList={followingList}\r\n               isCurrent={false}\r\n             />\r\n           );\r\n         }\r\n       });\r\n     }\r\n    return (\r\n      <div className='first'>\r\n        <div className='second'>\r\n          <div className='third'>\r\n            <div className='followers-container'>\r\n              <h5>Followers </h5>\r\n              <span>\r\n                <Link onClick={() => window.location.reload(true)} className='X'>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </Link>\r\n              </span>\r\n              <hr />\r\n\r\n              <div className='container scrolling'>\r\n                <div\r\n                  className='row '\r\n                  // style={{ marginBottom: \"10px\" }}\r\n                  // style={{position: \"relative\"}}\r\n                >\r\n                  {content}\r\n                </div>\r\n              </div>\r\n              {/* followers-container ends */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(Followers);","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\validation\\is-empty.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\search\\Search.js",["284","285"],"import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./search.css\";\r\nimport { getAllProfiles } from \"../../actions/profileActions\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from '../common/Spinner';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      showMenu: false,\r\n      searchInput: \"\"\r\n    };\r\n    \r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n  \r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    \r\n    this.setState({ showMenu: true, searchInput: event.target.value }, () => {\r\n      document.addEventListener('click', this.closeMenu);\r\n    });\r\n    this.props.getAllProfiles();\r\n  }\r\n  \r\n  closeMenu(event) {\r\n    \r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      \r\n      this.setState({ showMenu: false, searchInput: \"\" }, () => {\r\n        document.removeEventListener('click', this.closeMenu);\r\n      });  \r\n      \r\n    }\r\n  }\r\n\r\n  searchClick(event) {\r\n    this.closeMenu(event);\r\n  }\r\n\r\n  render() {\r\n    const {search, loading} = this.props.profile;\r\n    const {auth} = this.props;\r\n    let content;\r\n    if(search === null || loading){\r\n      content = <Spinner />;\r\n    }\r\n    if(search !== null && search.length > 0) {\r\n      const searchProfiles = search.filter(profile => {\r\n        return profile.user.name.toLowerCase().includes(this.state.searchInput.toLowerCase()) && profile.user._id !== auth.user.id;\r\n      });\r\n      if (searchProfiles.length === 0) {\r\n        content = <div style={{textAlign: \"center\", fontSize: \"14px\"}}>No search result</div>\r\n      } else {\r\n        content = searchProfiles.map(profile =>  {\r\n          return (\r\n          <Link  to={`/profile/${profile.handle}`} className=\"searchOption\" onClick={this.searchClick.bind(this)}>\r\n            <div className=\"searchData\">\r\n              <div className=\"searchAvatarBox\">\r\n                <img className=\"searchAvatar\" src={profile.user.avatar}/>\r\n              </div>\r\n              <div className=\"searchNameBox\">\r\n                <div className=\"searchName\">{profile.user.name}</div>\r\n                <div className=\"searchHandle\">{profile.handle}</div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        )});\r\n      }\r\n      // console.log(searchProfiles);\r\n      \r\n    } \r\n        \r\n    return (\r\n      <div className='searchBox d-none d-xl-block'>\r\n        <span className='fa fa-search searchIcon'></span>\r\n        <input\r\n          className='searchInput'\r\n          type='search'\r\n          placeholder='Search..'\r\n          onChange={this.showMenu}\r\n          value={this.state.searchInput}\r\n        />\r\n\r\n        {this.state.showMenu ? (\r\n          <div className='searchDropDown'>\r\n            <div\r\n              className='searchDropDownMenu'\r\n              ref={(element) => {\r\n                this.dropdownMenu = element;\r\n              }}\r\n            >\r\n              <div className='searchOptions'>{content}</div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getAllProfiles,\r\n})(Search);","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\index.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionLists.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\PostItem.js",["286"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSuggestionList } from \"../../actions/profileActions\";\r\nimport Comments from \"./Comments\";\r\nimport AddComment from \"./AddComment\";\r\nimport Moment from \"react-moment\";\r\nimport { addLikePosts, removeLikePosts } from \"../../actions/postActions\";\r\nimport { savePosts, unsavePosts } from \"../../actions/postActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../common/Spinner\";\r\n\r\n\r\nclass PostItem extends Component {\r\n  render() {\r\n    const { post, loadingPost } = this.props;\r\n    let comments = post.comments.filter(comment => comment.user !== null)\r\n    \r\n    let alreadyLiked = false;\r\n    if (post.likes !== undefined) {\r\n      if (\r\n        post.likes.filter((like) => like.user === this.props.auth.user.id)\r\n          .length > 0\r\n      ) {\r\n        alreadyLiked = true;\r\n      }\r\n    }\r\n    let alreadySaved = false;\r\n    if (post.saved !== undefined) {\r\n      if (\r\n        post.saved.filter((save) => save.user === this.props.auth.user.id)\r\n          .length > 0\r\n      ) {\r\n        alreadySaved = true;\r\n      }\r\n    }\r\n \r\n    const icons = (\r\n      <div>\r\n        {alreadyLiked === true ? (\r\n          <div type='button' className='icons-post'>\r\n            <i\r\n              onClick={() => {\r\n                this.props.removeLikePosts(post._id);\r\n              }}\r\n              className='fa fa-heart'\r\n              style={{ fontSize: \"1.5em\", color: \"red\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            type='button'\r\n            onClick={() => this.props.addLikePosts(post._id)}\r\n            className='icons-post'\r\n          >\r\n            <i\r\n              className='fa fa-heart-o'\r\n              style={{ fontSize: \"1.5em\", color: \"black\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        )}\r\n        <div type='button' className='icons-post'>\r\n          <i\r\n            style={{ fontSize: \"1.5em\" }}\r\n            className='fa fa-comment-o'\r\n            aria-hidden='true'\r\n          ></i>\r\n        </div>\r\n        {alreadySaved === true ? (\r\n          <div type='button' className='icons-post'>\r\n            <i\r\n              onClick={() => {\r\n                this.props.unsavePosts(post._id);\r\n              }}\r\n              className='fa fa-bookmark'\r\n              style={{ fontSize: \"1.5em\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            type='button'\r\n            onClick={() => this.props.savePosts(post._id)}\r\n            className='icons-post'\r\n          >\r\n            <i\r\n              className='fa fa-bookmark-o'\r\n              style={{ fontSize: \"1.5em\", color: \"black\" }}\r\n              aria-hidden='true'\r\n            ></i>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n    let content;\r\n    if (loadingPost) {\r\n      content = <Spinner />;\r\n    } else {\r\n      content = (\r\n        <div className='container'>\r\n          <div className='row>'>\r\n            <div\r\n              className='card offset-sm-1'\r\n              style={{\r\n                width: \"600px\",\r\n                // border: \"0.8px solid\",\r\n                borderColor: \"#D3D3D3\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <div\r\n                //  className='card-header'\r\n                // style={{ position: \"relative\" }}\r\n              >\r\n                <Link to={`/profile/${post.handle}`}>\r\n                  <img className='avatar-icon' src={post.user.avatar} alt='Avatar' />\r\n                </Link>\r\n                <Link\r\n                  to={`/profile/${post.handle}`}\r\n                  className='name-of-account'\r\n                >\r\n                  {post.name}\r\n                </Link>\r\n\r\n                {/* <hr\r\n                         style={{\r\n                           marginBottom: \"10px\",\r\n                         }}\r\n                       /> */}\r\n                <Link to={`/post/${post._id}`}>\r\n                  {\" \"}\r\n                  <img\r\n                    className='card-img-top'\r\n                    style={{\r\n                      borderTop: \"1px solid rgba(var(--b6a,219,219,219)\",\r\n                      marginTop: \"20px\",\r\n                      borderRadius: \"0\",\r\n                      width:\"600px\",\r\n                      height: \"600px\",\r\n                      objectFit: \"cover\"\r\n                    }}\r\n                    src={post.image}\r\n                  />{\" \"}\r\n                </Link>\r\n\r\n                {/*  post description & comments on post */}\r\n                <div\r\n                  // className='comment-wrapper'\r\n                  style={{\r\n                    // border: \"0.8px solid rgb(211, 211, 211)\",\r\n                    borderTop: \"transparent\",\r\n                  }}\r\n                >\r\n                  <section className='row'>\r\n                    <section id='icons'>\r\n                      {/* Show like, save icons */}\r\n                      {icons}\r\n\r\n                      <div className='textStyle-date'>\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            fontSize: \"1.4em\",\r\n                            color: \"black\",\r\n                            marginLeft: \"10px\",\r\n                          }}\r\n                        >\r\n                          {post.likes && post.likes.length} Likes\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                    {/* <!-- post description start--> */}\r\n                    <div className=' col-lg-10'>\r\n                      <div id='col-space'>\r\n                        <Link\r\n                          className='handlename-post'\r\n                          to={`/profile/${post.handle}`}\r\n                        >\r\n                          {post.name}\r\n                        </Link>\r\n                        <span className='textStyle-comment'>\r\n                          &nbsp; {post.text}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {/* <!-- post description end--> */}\r\n                    {/* comments on post */}\r\n\r\n                    <Comments\r\n                      comments={comments}\r\n                      postId={post._id}\r\n                      showAvatar={true}\r\n                      showDelete={true}\r\n                    />\r\n                    <Moment format=\"D MMM YYYY\" style={{marginLeft: \"25px\", color: \"grey\", fontSize: \"0.8rem\"}}>{post.date}</Moment>\r\n                  </section>\r\n                  <hr />\r\n\r\n                  <AddComment postId={post._id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSuggestionList,\r\n  addLikePosts,\r\n  removeLikePosts,\r\n  savePosts,\r\n  unsavePosts,\r\n})(PostItem);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\displayPost\\CommentItem.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\follow\\FollowItem.js",["287"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { followUser, unfollowUser } from \"../../actions/profileActions\";\r\n\r\nclass FollowItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFollow: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {follow, followingList} = this.props;\r\n    if (followingList.indexOf(follow.user._id) === -1) {\r\n      this.setState({isFollow: false})\r\n    } else {\r\n      this.setState({isFollow: true})\r\n    }\r\n  }\r\n\r\n  handleFollow(profileId) {\r\n    this.setState({isFollow: true});\r\n    this.props.followUser(profileId);\r\n  }\r\n  handleUnFollow(profileId) {\r\n    this.setState({isFollow: false});\r\n    this.props.unfollowUser(profileId);\r\n  }\r\n  render() {\r\n    const {follow, isCurrent} = this.props;\r\n\r\n    let followButton;\r\n    \r\n    if (!isCurrent) {\r\n      followButton = (\r\n        <div className='spaceMargin col-sm-3 col-md-3 col-lg-3 col-xxs-3'>\r\n          {!this.state.isFollow && (\r\n            <button\r\n              className='btn'\r\n              style={{\r\n                lineHeight: \"2px\",\r\n                float: \"right\",\r\n                height: \"30px\",\r\n                backgroundColor: \"#0095f6\",\r\n                color: \"white\"\r\n              }}\r\n              onClick={this.handleFollow.bind(this, follow.profile)}\r\n            >\r\n             Follow \r\n            </button>\r\n          )}\r\n          {this.state.isFollow && (\r\n            <button\r\n              className='btn'\r\n              style={{\r\n                lineHeight: \"2px\",\r\n                float: \"right\",\r\n                height: \"30px\",\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #dbdbdb\",\r\n                color: \"black\"\r\n              }}\r\n              onClick={this.handleUnFollow.bind(this, follow.profile)}\r\n            >\r\n             Following \r\n            </button>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\" style={{marginBottom: \"10px\"}}>\r\n        <div className=\"row\">\r\n          <div className='col-sm-3 col-md-3 col-lg-3 col-xxs-3'>\r\n            <Link to={`/profile/${follow.handle}`}>\r\n              <img\r\n                className='followers-avatar-icon'\r\n                src={follow.user.avatar}\r\n                alt='Avatar'\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className='col-sm-6 col-md-6 col-lg-6 col-xxs-6'>\r\n          <Link\r\n            to={`/profile/${follow.handle}`}\r\n            class='fontStyleSizeColor'\r\n            style={{ \r\n              marginLeft: \"-50px\", \r\n            fontSize: \"16px\" }}\r\n          >\r\n            {follow.handle}\r\n          </Link>\r\n          <div\r\n            style={{\r\n              marginTop: \"-2px\",\r\n              marginLeft: \"-50px\",\r\n              color: \"#606060\",\r\n              fontSize: \"-0.85em\"\r\n            }}\r\n          >\r\n            {follow.name}\r\n          </div>\r\n        </div>\r\n            {followButton}\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n});\r\nexport default connect(mapStateToProps, { followUser, unfollowUser })(FollowItem);\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\errorReducer.js",["288"],"import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\authReducer.js",["289"],"import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-empty';\r\n  \r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state=initialState, action){\r\n  switch(action.type){\r\n    case SET_CURRENT_USER:\r\n      return {\r\n       ...state,\r\n       user: action.payload,\r\n       isAuthenticated: !isEmpty(action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\profileReducer.js",["290"],"import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_FOLLOWING,\r\n  GET_ALL_PROFILES,\r\n  GET_CURRENT_PROFILE,\r\n  CLEAR_PROFILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false,\r\n  followingList: null,\r\n  search: null,\r\n  currentProfile: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_PROFILE:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_CURRENT_PROFILE:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        currentProfile: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_ALL_PROFILES: \r\n      return {\r\n        ...state,\r\n        search: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_FOLLOWING:\r\n      return {\r\n        ...state,\r\n        followingList: action.payload,\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        currentProfile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\reducers\\postReducer.js",["291"],"import { GET_POST, GET_POSTS, POST_LOADING, GET_USER_POSTS, CLEAR_POST, CLEAR_POSTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n  userPosts: null,\r\n  loadingPost: false\r\n};\r\n\r\nexport default function (state=initialState, action) {\r\n  switch (action.type) {\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        loadingPost: true,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loadingPost: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loadingPost: false,\r\n      };\r\n    case GET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload,\r\n        loadingPost: false,\r\n      };\r\n    case CLEAR_POST:\r\n      return {\r\n        ...state,\r\n        post: {}\r\n      }\r\n    case CLEAR_POSTS: \r\n      return {\r\n        ...state,\r\n        posts: []\r\n      }\r\n    // case GET_OTHER_USERS_POSTS:\r\n    //   return {\r\n    //     ...state,\r\n    //     othersUserPosts: action.payload,\r\n    //     loadingPost: false,\r\n      // };\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\SuggestionItem.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\Comments.js",[],"D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\AddComment.js",["292"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addComment,addCommentPosts } from \"../../actions/postActions\";\r\nimport classnames from 'classnames';\r\nimport is_empty from '../../validation/is-empty';\r\n\r\nclass AddComment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newComment = {\r\n      text: this.state.comment\r\n    };\r\n    console.log(this.props.postId);\r\n    //this.props.addComment(newComment, this.props.postId);\r\n    this.props.addCommentPosts(newComment, this.props.postId);\r\n    this.setState({comment: \"\"});\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const enabled = !is_empty(this.state.comment); \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <textarea\r\n          type='text'\r\n          name='comment'\r\n          placeholder=\"Add new comment...\"\r\n          value={this.state.comment}\r\n          onChange={this.onChange}\r\n          className=\"comment-textarea\"\r\n        ></textarea>\r\n        <input \r\n          type=\"submit\" \r\n          className='post'\r\n          value=\"Post\"\r\n          disabled={!enabled}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addComment,addCommentPosts })(AddComment);\r\n\r\n","D:\\MERN-PROJECT-INSTA\\MERN_InstaApp\\client\\src\\components\\home\\CommentItem.js",["293","294"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/postActions';\r\n\r\nclass CommentItem extends Component {\r\n \r\n  render() {\r\n    const {comment, auth, postId} = this.props;   \r\n    return (\r\n      // <div className='container-fluid'>\r\n        <div class='row'>\r\n          <div className='col-lg-11'>\r\n            <div id='col-space' style={{ marginLeft: \"15px\", marginTop: \"-10px\"}}>\r\n              <Link\r\n                to={`/profile/${comment.handle}`}\r\n                className='handlename-post'\r\n              >\r\n                {comment.name}\r\n              </Link>\r\n              <span className='textStyle-comment'>&nbsp; {comment.text}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\r\n\r\n",{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":15},{"ruleId":"299","severity":1,"message":"303","line":1,"column":40,"nodeType":"301","messageId":"302","endLine":1,"endColumn":47},{"ruleId":"299","severity":1,"message":"304","line":1,"column":40,"nodeType":"301","messageId":"302","endLine":1,"endColumn":51},{"ruleId":"299","severity":1,"message":"305","line":2,"column":22,"nodeType":"301","messageId":"302","endLine":2,"endColumn":38},{"ruleId":"299","severity":1,"message":"306","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":20},{"ruleId":"299","severity":1,"message":"307","line":13,"column":10,"nodeType":"301","messageId":"302","endLine":13,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":144,"column":19,"nodeType":"310","endLine":148,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":157,"column":15,"nodeType":"310","endLine":161,"endColumn":17},{"ruleId":"299","severity":1,"message":"311","line":1,"column":28,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"311","line":1,"column":28,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"312","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":172,"column":15,"nodeType":"310","endLine":177,"endColumn":17},{"ruleId":"313","severity":1,"message":"314","line":214,"column":19,"nodeType":"315","endLine":214,"endColumn":38},{"ruleId":"299","severity":1,"message":"316","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":13},{"ruleId":"317","severity":1,"message":"318","line":56,"column":9,"nodeType":"310","endLine":56,"endColumn":77},{"ruleId":"319","severity":1,"message":"320","line":29,"column":18,"nodeType":"321","messageId":"322","endLine":29,"endColumn":20},{"ruleId":"319","severity":1,"message":"320","line":36,"column":25,"nodeType":"321","messageId":"322","endLine":36,"endColumn":27},{"ruleId":"319","severity":1,"message":"320","line":43,"column":25,"nodeType":"321","messageId":"322","endLine":43,"endColumn":27},{"ruleId":"319","severity":1,"message":"320","line":51,"column":25,"nodeType":"321","messageId":"322","endLine":51,"endColumn":27},{"ruleId":"319","severity":1,"message":"320","line":51,"column":51,"nodeType":"321","messageId":"322","endLine":51,"endColumn":53},{"ruleId":"299","severity":1,"message":"323","line":79,"column":29,"nodeType":"301","messageId":"302","endLine":79,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":184,"column":15,"nodeType":"326","messageId":"327","endLine":184,"endColumn":82},{"ruleId":"324","severity":1,"message":"325","line":185,"column":15,"nodeType":"326","messageId":"327","endLine":229,"endColumn":25},{"ruleId":"317","severity":1,"message":"318","line":157,"column":13,"nodeType":"310","endLine":160,"endColumn":15},{"ruleId":"317","severity":1,"message":"318","line":84,"column":34,"nodeType":"310","endLine":84,"endColumn":106},{"ruleId":"308","severity":1,"message":"309","line":85,"column":40,"nodeType":"310","endLine":85,"endColumn":129},{"ruleId":"299","severity":1,"message":"328","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":14},{"ruleId":"299","severity":1,"message":"329","line":3,"column":16,"nodeType":"301","messageId":"302","endLine":3,"endColumn":26},{"ruleId":"299","severity":1,"message":"330","line":20,"column":5,"nodeType":"301","messageId":"302","endLine":20,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":5,"column":1,"nodeType":"333","endLine":10,"endColumn":2},{"ruleId":"299","severity":1,"message":"334","line":7,"column":13,"nodeType":"301","messageId":"302","endLine":7,"endColumn":17},{"ruleId":"299","severity":1,"message":"335","line":7,"column":19,"nodeType":"301","messageId":"302","endLine":7,"endColumn":21},{"ruleId":"299","severity":1,"message":"336","line":7,"column":23,"nodeType":"301","messageId":"302","endLine":7,"endColumn":28},{"ruleId":"299","severity":1,"message":"311","line":1,"column":28,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"337","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":70,"column":15,"nodeType":"310","endLine":79,"endColumn":17},{"ruleId":"299","severity":1,"message":"312","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":18},{"ruleId":"299","severity":1,"message":"338","line":7,"column":8,"nodeType":"301","messageId":"302","endLine":7,"endColumn":17},{"ruleId":"299","severity":1,"message":"338","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":17},{"ruleId":"299","severity":1,"message":"338","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":65,"column":17,"nodeType":"310","endLine":65,"endColumn":74},{"ruleId":"317","severity":1,"message":"318","line":135,"column":19,"nodeType":"310","endLine":146,"endColumn":21},{"ruleId":"299","severity":1,"message":"338","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":17},{"ruleId":"331","severity":1,"message":"339","line":5,"column":1,"nodeType":"333","endLine":14,"endColumn":2},{"ruleId":"331","severity":1,"message":"339","line":9,"column":1,"nodeType":"333","endLine":20,"endColumn":2},{"ruleId":"331","severity":1,"message":"339","line":20,"column":1,"nodeType":"333","endLine":71,"endColumn":2},{"ruleId":"331","severity":1,"message":"339","line":10,"column":1,"nodeType":"333","endLine":54,"endColumn":2},{"ruleId":"299","severity":1,"message":"312","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":18},{"ruleId":"299","severity":1,"message":"340","line":9,"column":21,"nodeType":"301","messageId":"302","endLine":9,"endColumn":25},{"ruleId":"299","severity":1,"message":"341","line":9,"column":27,"nodeType":"301","messageId":"302","endLine":9,"endColumn":33},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'GET_PROFILE' is defined but never used.","'SET_CURRENT_USER' is defined but never used.","'setAuthToken' is defined but never used.","'getUserPosts' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Fragment' is defined but never used.","'classnames' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'withRouter' is defined but never used.","'imagesArray' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'post' is assigned a value but never used.","'id' is assigned a value but never used.","'image' is assigned a value but never used.","'avatar' is defined but never used.","'PropTypes' is defined but never used.","Unexpected default export of anonymous function","'auth' is assigned a value but never used.","'postId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]