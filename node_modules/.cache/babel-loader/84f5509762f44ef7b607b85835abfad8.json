{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MERN-PROJECT-INSTA\\\\MERN_InstaApp\\\\client\\\\src\\\\components\\\\displayPost\\\\CreatePost.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport defaultImage from \"../../img/defaultImage.jpg\";\nimport classnames from 'classnames';\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/postActions\";\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadImage = e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append(\"file\", files[0]);\n      data.append(\"upload_preset\", \"instagram\");\n      this.setState({\n        fileData: data,\n        showDefault: false,\n        image: URL.createObjectURL(e.target.files[0])\n      });\n    };\n\n    this.state = {\n      image: \"\",\n      showDefault: true,\n      text: \"\",\n      errors: {},\n      fileData: new FormData()\n    };\n    this.uploadImage = this.uploadImage.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // Get user uploaded file\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // POST image to cloudinary through the cloudinary API and append image\n\n    fetch(\"https://api.cloudinary.com/v1_1/instagramteam/image/upload\", {\n      method: \"POST\",\n      body: this.state.fileData\n    }).then(res => res.json()).then(result => {\n      const newPost = {\n        text: this.state.text,\n        image: result.secure_url\n      };\n      this.props.addPost(newPost, this.props.history);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-sm-12 d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            onChange: this.uploadImage,\n            style: {\n              marginBottom: \"20px\",\n              marginTop: \"10px\"\n            },\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), this.state.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.image,\n            style: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this), this.state.showDefault && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultImage,\n            className: \"create-post-default-image-style\",\n            alt: \"default image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 40\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              fontSize: \"80%\"\n            },\n            children: errors.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column col-md-8 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"1.75rem\"\n            },\n            children: \"Create New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"col-form-label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                name: \"text\",\n                placeholder: \"Description\",\n                style: {\n                  width: \"93%\",\n                  height: \"200px\"\n                },\n                value: this.state.text,\n                onChange: this.onChange,\n                className: classnames(\"form-control \", {\n                  \"is-invalid\": errors.text\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"30px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: this.onClick,\n                type: \"submit\",\n                value: \"Post\",\n                className: \"btn btn-primary\",\n                style: {\n                  marginRight: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/profile\",\n                className: \"btn btn-secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(withRouter(CreatePost));","map":{"version":3,"sources":["D:/MERN-PROJECT-INSTA/MERN_InstaApp/client/src/components/displayPost/CreatePost.js"],"names":["React","Component","Link","withRouter","defaultImage","classnames","connect","addPost","CreatePost","constructor","props","uploadImage","e","files","target","data","FormData","append","setState","fileData","showDefault","image","URL","createObjectURL","state","text","errors","bind","onChange","onSubmit","name","value","preventDefault","fetch","method","body","then","res","json","result","newPost","secure_url","history","componentWillReceiveProps","nextProps","render","marginTop","marginBottom","width","color","fontSize","height","onClick","marginRight","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport defaultImage from \"../../img/defaultImage.jpg\";\r\nimport classnames from 'classnames';\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"\",\r\n      showDefault: true,\r\n      text: \"\",\r\n      errors: {},\r\n      fileData: new FormData()\r\n    };\r\n    this.uploadImage = this.uploadImage.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  \r\n  // Get user uploaded file\r\n  uploadImage = e => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    this.setState({\r\n      fileData: data,\r\n      showDefault: false,\r\n      image: URL.createObjectURL(e.target.files[0])\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // POST image to cloudinary through the cloudinary API and append image\r\n    fetch(\r\n      \"https://api.cloudinary.com/v1_1/instagramteam/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: this.state.fileData,\r\n      }\r\n    )\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      const newPost = {\r\n        text: this.state.text,\r\n        image: result.secure_url\r\n      };\r\n  \r\n      this.props.addPost(newPost, this.props.history);\r\n    })\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"container\" style={{marginTop: \"30px\"}}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-sm-12 d-flex flex-column\">\r\n\r\n            <input\r\n              type='file'\r\n              name='file'\r\n              onChange={this.uploadImage}\r\n              style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\r\n              accept=\"image/*\"\r\n            />\r\n            \r\n            {this.state.image && <img src={this.state.image} style={{width: \"100%\", marginTop: \"20px\"}}/>}\r\n            {this.state.showDefault && <img src={defaultImage} className=\"create-post-default-image-style\" alt=\"default image\"/>}\r\n            {errors.image && (\r\n              <div style={{color: \"red\", fontSize: \"80%\"}}>{errors.image}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex flex-column col-md-8 col-sm-12\">\r\n            <p style={{fontSize: \"1.75rem\"}}>Create New Post</p>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className='form-group'>\r\n                <label className='col-form-label'>Description</label>\r\n                <textarea\r\n                  type='text'\r\n                  name='text'\r\n                  placeholder=\"Description\"\r\n                  style={{width: \"93%\", height: \"200px\"}}\r\n                  value={this.state.text}\r\n                  onChange={this.onChange}\r\n                  className={classnames(\"form-control \", {\r\n                    \"is-invalid\": errors.text,\r\n                  })}\r\n                />\r\n                {errors.text && (\r\n                  <div className='invalid-feedback'>{errors.text}</div>\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ marginTop: \"30px\" }}>\r\n                <input\r\n                  onClick={this.onClick}\r\n                  type='submit'\r\n                  value='Post'\r\n                  className='btn btn-primary'\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n                <Link to='/profile' className='btn btn-secondary'>\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPost })(withRouter(CreatePost));\r\n"]},"metadata":{},"sourceType":"module"}