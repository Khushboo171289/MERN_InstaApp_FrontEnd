{"ast":null,"code":"import { SET_CURRENT_USER, GET_ERRORS, GET_PROFILE } from './types';\nimport axios from 'axios';\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { getCurrentProfile } from './profileActions';\nimport { clearCurrentProfile } from \"./profileActions\"; //Register user\n\nexport const signupUser = (userData, history) => dispatch => {\n  axios.post('/api/users/signup', userData).then(res => history.push('/')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Login user\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    // Save token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token); // Set token to axios header\n\n    setAuthToken(token); // Decode the token\n\n    const decoded = jwt_decode(token); // Dispatch set current user\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n    dispatch(getCurrentProfile());\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //Logout user\n\nexport const logoutUser = () => dispatch => {\n  //Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\"); //Remove token from auth header\n\n  setAuthToken(false); //Reset the redux store to false and {}\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n  dispatch(clearCurrentProfile());\n}; //Add picture\n\nexport const addPicture = (picture, history) => dispatch => {\n  axios.post(\"/api/users/editAvatar\", picture).then(res => {\n    window.alert(\"Photo successfully changed\");\n    window.location.reload(false);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //Delete Avatar\n\nexport const deletePicture = history => dispatch => {\n  axios.post(\"/api/users/deleteAvatar\").then(res => {\n    // console.log(res.data);\n    //history.push(\"/profile\")})\n    window.location.reload(false);\n  }).catch(err => {\n    // console.log(err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["D:/MERN-PROJECT-INSTA/MERN_InstaApp/client/src/actions/authActions.js"],"names":["SET_CURRENT_USER","GET_ERRORS","GET_PROFILE","axios","setAuthToken","jwt_decode","getCurrentProfile","clearCurrentProfile","signupUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","logoutUser","removeItem","addPicture","picture","window","alert","location","reload","deletePicture"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,UAA3B,EAAuCC,WAAvC,QAA0D,SAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;AACA,SAASC,mBAAT,QAAoC,kBAApC,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DR,EAAAA,KAAK,CACFS,IADH,CACQ,mBADR,EAC6BH,QAD7B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,GAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEjB,UADC;AAEPkB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,SAAS,GAAIb,QAAD,IAAeE,QAAD,IAAc;AACnDR,EAAAA,KAAK,CACFS,IADH,CACQ,kBADR,EAC4BH,QAD5B,EAEGI,IAFH,CAESC,GAAD,IAAS;AACb;AACA,UAAM;AAACS,MAAAA;AAAD,QAAUT,GAAG,CAACO,IAApB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHa,CAIb;;AACAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ,CALa,CAMb;;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B,CAPa,CAQb;;AACCZ,IAAAA,QAAQ,CAAC;AACTO,MAAAA,IAAI,EAAElB,gBADG;AAETmB,MAAAA,OAAO,EAAEO;AAFA,KAAD,CAAR;AAIDf,IAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AACD,GAhBH,EAgBKU,KAhBL,CAgBYC,GAAD,IACPN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEjB,UADC;AAEPkB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAjBZ;AAuBD,CAxBM,C,CA0BP;;AACA,OAAO,MAAMM,UAAU,GAAG,MAAMhB,QAAQ,IAAI;AAC1C;AACAa,EAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACAxB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAO,EAAAA,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAElB,gBADC;AAEPmB,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAIAR,EAAAA,QAAQ,CAACJ,mBAAmB,EAApB,CAAR;AACD,CAXM,C,CAaP;;AACA,OAAO,MAAMsB,UAAU,GAAG,CAACC,OAAD,EAAUpB,OAAV,KAAsBC,QAAQ,IAAI;AAC1DR,EAAAA,KAAK,CACFS,IADH,CACQ,uBADR,EACiCkB,OADjC,EAEGjB,IAFH,CAEQC,GAAG,IAAI;AACXiB,IAAAA,MAAM,CAACC,KAAP,CAAa,4BAAb;AACAD,IAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAED,GANH,EAOGlB,KAPH,CAOSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEjB,UADC;AAEPkB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CARZ;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMc,aAAa,GAAIzB,OAAD,IAAaC,QAAQ,IAAI;AACpDR,EAAAA,KAAK,CACFS,IADH,CACQ,yBADR,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX;AACA;AACAiB,IAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAA8B,GALlC,EAMGlB,KANH,CAMSC,GAAG,IAAI;AACZ;AACAN,IAAAA,QAAQ,CAAC;AACTO,MAAAA,IAAI,EAAEjB,UADG;AAETkB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFb,KAAD,CAAR;AAIH,GAZD;AAaD,CAdM","sourcesContent":["import { SET_CURRENT_USER, GET_ERRORS, GET_PROFILE } from './types';\r\nimport axios from 'axios';\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {getCurrentProfile} from './profileActions'\r\nimport { clearCurrentProfile } from \"./profileActions\";\r\n\r\n//Register user\r\nexport const signupUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post('/api/users/signup', userData)\r\n    .then(res => history.push('/'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      }));\r\n};\r\n\r\n// Login user\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then((res) => {\r\n      // Save token to localStorage\r\n      const {token} = res.data;\r\n      localStorage.setItem('jwtToken', token);\r\n      // Set token to axios header\r\n      setAuthToken(token);\r\n      // Decode the token\r\n      const decoded = jwt_decode(token);\r\n      // Dispatch set current user\r\n       dispatch({\r\n       type: SET_CURRENT_USER,\r\n       payload: decoded\r\n      });\r\n      dispatch(getCurrentProfile());\r\n    }).catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n     \r\n    );\r\n};\r\n\r\n//Logout user\r\nexport const logoutUser = () => dispatch => {\r\n  //Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  //Remove token from auth header\r\n  setAuthToken(false);\r\n  //Reset the redux store to false and {}\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n  dispatch(clearCurrentProfile());\r\n};\r\n\r\n//Add picture\r\nexport const addPicture = (picture, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/editAvatar\", picture)\r\n    .then(res => {      \r\n      window.alert(\"Photo successfully changed\")\r\n      window.location.reload(false);\r\n     \r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      }))\r\n};\r\n\r\n//Delete Avatar\r\nexport const deletePicture = (history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/deleteAvatar\")\r\n    .then(res => {\r\n      // console.log(res.data);\r\n      //history.push(\"/profile\")})\r\n      window.location.reload(false)})\r\n    .catch(err => {\r\n      // console.log(err);\r\n      dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}