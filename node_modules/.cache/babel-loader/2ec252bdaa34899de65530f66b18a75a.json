{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MERN-PROJECT-INSTA\\\\MERN_InstaApp\\\\client\\\\src\\\\components\\\\profile\\\\UploadAvatar.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport defaultImage from \"../../img/defaultImage.jpg\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { addPicture } from \"../../actions/profileActions\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport is_empty from \"../../validation/is-empty\";\n\nclass UploadAvatar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectFile = e => {\n      if (e.target.files && e.target.files.length > 0) {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => this.setState({\n          src: reader.result\n        }));\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    };\n\n    this.onImageLoaded = image => {\n      this.imageRef = image;\n    };\n\n    this.onCropComplete = crop => {\n      this.makeClientCrop(crop);\n    };\n\n    this.onCropChange = (crop, percentCrop) => {\n      this.setState({\n        crop\n      });\n    };\n\n    this.uploadImage = croppedImageUrl => {\n      const data = new FormData();\n      data.append(\"file\", croppedImageUrl);\n      data.append(\"upload_preset\", \"instagram\");\n      this.setState({\n        fileData: data,\n        showDefault: false // image: URL.createObjectURL(croppedImageUrl),\n\n      });\n    };\n\n    this.onSubmit = () => {\n      // e.preventDefault();\n      fetch(\"https://api.cloudinary.com/v1_1/instagramteam/image/upload\", {\n        method: \"POST\",\n        body: this.state.fileData\n      }).then(res => res.json()).then(result => {\n        const newPic = {\n          avatar: result.secure_url\n        };\n        this.props.addPicture(newPic, this.props.history);\n        console.log(newPic);\n      });\n    };\n\n    this.state = {\n      showDefault: true,\n      fileData: new FormData(),\n      src: null,\n      crop: {\n        unit: \"%\",\n        width: 90,\n        aspect: 1 / 1\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      currentProfile\n    } = this.props.profile;\n\n    if (currentProfile) {\n      this.setState({\n        croppedImageUrl: currentProfile.user.avatar\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      currentProfile\n    } = nextProps.profile;\n\n    if (currentProfile) {\n      this.setState({\n        croppedImageUrl: currentProfile.user.avatar\n      });\n    }\n  }\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(this.imageRef, crop, \"newFile.jpeg\");\n      this.setState({\n        croppedImageUrl\n      });\n      this.uploadImage(croppedImageUrl);\n    }\n  }\n\n  getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return canvas.toDataURL(\"image/jpeg\");\n  } // upload cropped image to cloudinary\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      crop,\n      src,\n      croppedImageUrl\n    } = this.state;\n    const enabled = !is_empty(this.state.src);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        justifyContent: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\",\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-12 d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\" // onClick={e => this.uploadImage}\n              ,\n              style: {\n                marginBottom: \"20px\",\n                marginTop: \"10px\"\n              },\n              accept: \"image/*\",\n              onChange: this.onSelectFile,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this), src && /*#__PURE__*/_jsxDEV(ReactCrop, {\n              src: src,\n              crop: crop // ruleOfThirds\n              ,\n              onImageLoaded: this.onImageLoaded,\n              onComplete: this.onCropComplete,\n              onChange: this.onCropChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), this.state.showDefault && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: defaultImage,\n              className: \"create-post-default-image-style\",\n              alt: \"default image\",\n              style: {\n                marginTop: \"0px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm-12 d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"2px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"1.75rem\"\n                  },\n                  children: \"Update Avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: \"300px\"\n                },\n                children: croppedImageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"Crop\",\n                  style: {\n                    // maxWidth: \"100%\",\n                    // position: \"absolute\",\n                    top: \"56px\",\n                    // left: \"400px\",\n                    width: \"200px\",\n                    borderRadius: \"50%\",\n                    marginTop: \"15px\"\n                  },\n                  src: croppedImageUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"30px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.onSubmit,\n                  type: \"submit\",\n                  value: \"Upload\",\n                  className: \"btn btn-primary\",\n                  style: {\n                    width: \"70px\",\n                    height: \"35px\",\n                    marginRight: \"10px\"\n                  },\n                  disabled: \"disabled\",\n                  disabled: !enabled,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/profile\",\n                  className: \"btn btn-secondary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addPicture\n})(withRouter(UploadAvatar));","map":{"version":3,"sources":["D:/MERN-PROJECT-INSTA/MERN_InstaApp/client/src/components/profile/UploadAvatar.js"],"names":["React","Component","Link","withRouter","defaultImage","classnames","connect","addPicture","ReactCrop","is_empty","UploadAvatar","constructor","props","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","setState","src","result","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","uploadImage","croppedImageUrl","data","FormData","append","fileData","showDefault","onSubmit","fetch","method","body","state","then","res","json","newPic","avatar","secure_url","history","console","log","unit","width","aspect","onChange","bind","componentDidMount","currentProfile","profile","user","componentWillReceiveProps","nextProps","height","getCroppedImg","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","toDataURL","name","value","render","enabled","justifyContent","marginLeft","marginRight","marginTop","position","marginBottom","fontSize","top","borderRadius","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport defaultImage from \"../../img/defaultImage.jpg\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPicture } from \"../../actions/profileActions\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport is_empty from \"../../validation/is-empty\";\r\n\r\nclass UploadAvatar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showDefault: true,\r\n      fileData: new FormData(),\r\n      src: null,\r\n      crop: {\r\n        unit: \"%\",\r\n        width: 90,\r\n        aspect: 1 / 1,\r\n      },\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {currentProfile} = this.props.profile;\r\n    if (currentProfile) {\r\n      this.setState({croppedImageUrl: currentProfile.user.avatar});\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {currentProfile} = nextProps.profile;\r\n    if (currentProfile) {\r\n      this.setState({croppedImageUrl: currentProfile.user.avatar});\r\n    }\r\n  }\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n      this.uploadImage(croppedImageUrl);\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n    return canvas.toDataURL(\"image/jpeg\");\r\n  }\r\n  // upload cropped image to cloudinary\r\n  uploadImage = (croppedImageUrl) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", croppedImageUrl);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    this.setState({\r\n      fileData: data,\r\n      showDefault: false,\r\n      // image: URL.createObjectURL(croppedImageUrl),\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit = () => {\r\n    // e.preventDefault();\r\n    fetch(\"https://api.cloudinary.com/v1_1/instagramteam/image/upload\", {\r\n      method: \"POST\",\r\n      body: this.state.fileData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newPic = {\r\n          avatar: result.secure_url,\r\n        };\r\n        this.props.addPicture(newPic, this.props.history);\r\n        console.log(newPic);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { crop, src, croppedImageUrl } = this.state;\r\n    const enabled = !is_empty(this.state.src);\r\n    return (\r\n      <div style={{width: \"60%\", justifyContent: \"center\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n      <div\r\n        style={{ marginTop: \"30px\", position: \"relative\" }}\r\n      >\r\n        <div className='row'>\r\n          <div className='col-md-6 col-sm-12 d-flex flex-column'>\r\n            <input\r\n              type='file'\r\n              name='file'\r\n              // onClick={e => this.uploadImage}\r\n              style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\r\n              accept='image/*'\r\n              onChange={this.onSelectFile}\r\n              required\r\n            />\r\n            {src && (\r\n              <ReactCrop\r\n                src={src}\r\n                crop={crop}\r\n                // ruleOfThirds\r\n                onImageLoaded={this.onImageLoaded}\r\n                onComplete={this.onCropComplete}\r\n                onChange={this.onCropChange}\r\n              />\r\n            )}\r\n            {/* {croppedImageUrl && (\r\n              <img\r\n                alt='Crop'\r\n                style={{\r\n                  // maxWidth: \"100%\",\r\n                  position: \"absolute\",\r\n                  top: \"56px\",\r\n                  left: \"400px\",\r\n                  width: \"200px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n                src={croppedImageUrl}\r\n              />\r\n            )} */}\r\n            {this.state.showDefault && (\r\n              <img\r\n                src={defaultImage}\r\n                className='create-post-default-image-style'\r\n                alt='default image'\r\n                style={{marginTop: \"0px\"}}\r\n              />\r\n            )}\r\n          </div>{\" \"}\r\n          <div className=\"col-md-6 col-sm-12 d-flex flex-column\">\r\n            <div style={{marginLeft: \"20px\"}}>\r\n              {/* Show cropped image */}\r\n              <div style={{marginTop: \"2px\"}}><span style={{fontSize: \"1.75rem\"}}>Update Avatar</span></div>\r\n              <div style={{height: \"300px\"}}>\r\n                {croppedImageUrl && (\r\n                  <img\r\n                    alt='Crop'\r\n                    style={{\r\n                      // maxWidth: \"100%\",\r\n                      // position: \"absolute\",\r\n                      top: \"56px\",\r\n                      // left: \"400px\",\r\n                      width: \"200px\",\r\n                      borderRadius: \"50%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                    src={croppedImageUrl}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: \"30px\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={this.onSubmit}\r\n                  type='submit'\r\n                  value='Upload'\r\n                  className='btn btn-primary'\r\n                  style={{ width: \"70px\", height: \"35px\", marginRight: \"10px\" }}\r\n                  disabled='disabled'\r\n                  disabled={!enabled}\r\n                >\r\n                  Upload\r\n                </button>     \r\n\r\n                <Link to='/profile' className='btn btn-secondary'>\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPicture })(\r\n  withRouter(UploadAvatar)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}