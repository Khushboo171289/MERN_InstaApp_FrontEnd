{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MERN-PROJECT-INSTA\\\\MERN_InstaApp\\\\client\\\\src\\\\components\\\\home\\\\AddComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { addComment, addCommentPosts } from \"../../actions/postActions\";\nimport classnames from 'classnames';\nimport is_empty from '../../validation/is-empty';\n\nclass AddComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newComment = {\n      text: this.state.comment\n    };\n    console.log(this.props.postId); //this.props.addComment(newComment, this.props.postId);\n\n    this.props.addCommentPosts(newComment, this.props.postId);\n    this.setState({\n      comment: \"\"\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const enabled = !is_empty(this.state.comment);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"Add new comment...\",\n        value: this.state.comment,\n        onChange: this.onChange,\n        className: \"comment-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"post\",\n        value: \"Post\",\n        disabled: !enabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addComment,\n  addCommentPosts\n})(AddComment);","map":{"version":3,"sources":["D:/MERN-PROJECT-INSTA/MERN_InstaApp/client/src/components/home/AddComment.js"],"names":["React","Component","connect","addComment","addCommentPosts","classnames","is_empty","AddComment","constructor","props","state","comment","errors","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","newComment","text","console","log","postId","componentWillReceiveProps","nextProps","render","enabled","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAoBC,eAApB,QAA2C,2BAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AACDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACV,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,KAAd;AACD;;AACDL,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AADA,KAAnB;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWiB,MAAvB,EANU,CAOV;;AACA,SAAKjB,KAAL,CAAWL,eAAX,CAA2BkB,UAA3B,EAAuC,KAAKb,KAAL,CAAWiB,MAAlD;AACA,SAAKT,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAE;AAAV,KAAd;AACD;;AACDgB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAAChB,MAAd,EAAsB;AACpB,WAAKK,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEgB,SAAS,CAAChB;AAApB,OAAd;AACD;AACF;;AACDiB,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAACxB,QAAQ,CAAC,KAAKI,KAAL,CAAWC,OAAZ,CAAzB;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKI,QAArB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,WAAW,EAAC,oBAHd;AAIE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKE,QALjB;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,QAAQ,EAAE,CAACiB;AAJb;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAjDgC;;AAoDnC,MAAMC,eAAe,GAAIrB,KAAD,KAAY;AAClCE,EAAAA,MAAM,EAAEF,KAAK,CAACE;AADoB,CAAZ,CAAxB;;AAIA,eAAeV,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,UAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAyDG,UAAzD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addComment,addCommentPosts } from \"../../actions/postActions\";\r\nimport classnames from 'classnames';\r\nimport is_empty from '../../validation/is-empty';\r\n\r\nclass AddComment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newComment = {\r\n      text: this.state.comment\r\n    };\r\n    console.log(this.props.postId);\r\n    //this.props.addComment(newComment, this.props.postId);\r\n    this.props.addCommentPosts(newComment, this.props.postId);\r\n    this.setState({comment: \"\"});\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const enabled = !is_empty(this.state.comment); \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <textarea\r\n          type='text'\r\n          name='comment'\r\n          placeholder=\"Add new comment...\"\r\n          value={this.state.comment}\r\n          onChange={this.onChange}\r\n          className=\"comment-textarea\"\r\n        ></textarea>\r\n        <input \r\n          type=\"submit\" \r\n          className='post'\r\n          value=\"Post\"\r\n          disabled={!enabled}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addComment,addCommentPosts })(AddComment);\r\n\r\n"]},"metadata":{},"sourceType":"module"}