{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MERN-PROJECT-INSTA\\\\MERN_InstaApp\\\\client\\\\src\\\\components\\\\home\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostFeed from './PostFeed';\nimport Spinner from '../common/Spinner';\nimport { allPostsExceptCurrentUsers, getFollowingPosts } from '../../actions/postActions';\nimport SuggestionsBox from './SuggestionsBox';\nimport { Link } from 'react-router-dom';\n\nclass Posts extends Component {\n  componentDidMount() {\n    // this.props.allPostsExceptCurrentUsers();\n    this.props.getFollowingPosts();\n  }\n\n  render() {\n    const {\n      posts,\n      loadingPost\n    } = this.props.post;\n    let postContent;\n\n    if (loadingPost) {\n      postContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    } else {\n      if (posts.length > 0) {\n        postContent = /*#__PURE__*/_jsxDEV(PostFeed, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 23\n        }, this);\n      } else {\n        postContent = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/explore\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), \" more people to see posts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: postContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SuggestionsBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  allPostsExceptCurrentUsers,\n  getFollowingPosts\n})(Posts);","map":{"version":3,"sources":["D:/MERN-PROJECT-INSTA/MERN_InstaApp/client/src/components/home/Posts.js"],"names":["React","Component","PropTypes","connect","PostFeed","Spinner","allPostsExceptCurrentUsers","getFollowingPosts","SuggestionsBox","Link","Posts","componentDidMount","props","render","posts","loadingPost","post","postContent","length","marginTop","propTypes","getPosts","func","isRequired","object","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,0BAAT,EAAqCC,iBAArC,QAA8D,2BAA9D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAC5BU,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWL,iBAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKH,KAAL,CAAWI,IAA1C;AACA,QAAIC,WAAJ;;AAEA,QAAIF,WAAJ,EAAiB;AACfE,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KAFD,MAEO;AACL,UAAIH,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAuB;AACrBD,QAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD,OAFD,MAEO;AACLG,QAAAA,WAAW,gBACT;AAAK,UAAA,KAAK,EAAE;AAACE,YAAAA,SAAS,EAAE;AAAZ,WAAZ;AAAA,iCACE;AAAA,oCAAM,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,sBAEGF;AAFH;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,mCAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA1C2B;;AA6C9BP,KAAK,CAACU,SAAN,GAAkB;AAChBC,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAEd,SAAS,CAACsB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACsB,eAAD,EAAkB;AAAEnB,EAAAA,0BAAF;AAA8BC,EAAAA;AAA9B,CAAlB,CAAP,CAA4EG,KAA5E,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport PostFeed from './PostFeed';\r\nimport Spinner from '../common/Spinner';\r\nimport { allPostsExceptCurrentUsers, getFollowingPosts } from '../../actions/postActions';\r\nimport SuggestionsBox from './SuggestionsBox';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Posts extends Component {\r\n  componentDidMount() {\r\n    // this.props.allPostsExceptCurrentUsers();\r\n    this.props.getFollowingPosts();\r\n  }\r\n\r\n  render() {\r\n    const { posts, loadingPost } = this.props.post;\r\n    let postContent;\r\n\r\n    if (loadingPost) {\r\n      postContent = <Spinner />;\r\n    } else {\r\n      if (posts.length > 0 ) {\r\n        postContent = <PostFeed posts={posts} />;\r\n      } else {\r\n        postContent = (\r\n          <div style={{marginTop: \"30px\"}}>\r\n            <span><Link to=\"/explore\">Follow</Link> more people to see posts</span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"feed\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              \r\n              {postContent}\r\n            </div>\r\n            {/* Suggestions*/}\r\n            <div \r\n            // className=\"col-md-4\"\r\n            > \r\n              <SuggestionsBox />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { allPostsExceptCurrentUsers, getFollowingPosts })(Posts);\r\n"]},"metadata":{},"sourceType":"module"}